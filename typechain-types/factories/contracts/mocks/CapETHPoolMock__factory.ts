/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CapETHPoolMock,
  CapETHPoolMockInterface,
} from "../../../contracts/mocks/CapETHPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "creditUserProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrencyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUtilization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDepositTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDepositTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_utilizationMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_withdrawFee",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trading",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDecrease",
        type: "bool",
      },
    ],
    name: "updateOpenInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "utilizationMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currencyAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161060738038061060783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161057c61008b6000396000610228015261057c6000f3fe6080604052600436106101355760003560e01c80639ec5a894116100ab578063ed6835041161006f578063ed68350414610254578063f887ea40146101dd578063f8b2cb4f14610254578063fa5a2e621461015a578063fbbc7d7f1461028a578063fc7e286d146102a557600080fd5b80639ec5a89414610219578063c0d786551461013a578063d0e30db01461024c578063e941fa781461015a578063ec44acf2146101dd57600080fd5b80635b382989116100fd5780635b3829891461015a5780637eb711311461015a5780637ece45e8146101bc5780638da5cb5b146101dd578063934472f51461015a5780639d8e21771461020557600080fd5b806313af40351461013a57806318160ddd1461015a57806323548b8b1461015a5780632e1a7d4d1461017d578063532f66901461019d575b600080fd5b34801561014657600080fd5b50610158610155366004610435565b50565b005b34801561016657600080fd5b5060005b6040519081526020015b60405180910390f35b34801561018957600080fd5b50610158610198366004610457565b6102d2565b3480156101a957600080fd5b506101586101b8366004610470565b5050565b3480156101c857600080fd5b506101586101d73660046104a5565b50505050565b3480156101e957600080fd5b5060005b6040516001600160a01b039091168152602001610174565b34801561021157600080fd5b50600161016a565b34801561022557600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101ed565b6101586103be565b34801561026057600080fd5b5061016a61026f366004610435565b6001600160a01b031660009081526020819052604090205490565b34801561029657600080fd5b506101586101b83660046104d7565b3480156102b157600080fd5b5061016a6102c0366004610435565b60006020819052908152604090205481565b33600090815260208190526040812080548392906102f1908490610517565b9091555050604051600090339083908381818185875af1925050503d8060008114610338576040519150601f19603f3d011682016040523d82523d6000602084013e61033d565b606091505b50509050806103855760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640160405180910390fd5b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b33600090815260208190526040812080543492906103dd90849061052e565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b80356001600160a01b038116811461043057600080fd5b919050565b60006020828403121561044757600080fd5b61045082610419565b9392505050565b60006020828403121561046957600080fd5b5035919050565b6000806040838503121561048357600080fd5b823591506020830135801515811461049a57600080fd5b809150509250929050565b600080600080608085870312156104bb57600080fd5b5050823594602084013594506040840135936060013592509050565b600080604083850312156104ea57600080fd5b6104f383610419565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561052957610529610501565b500390565b6000821982111561054157610541610501565b50019056fea2646970667358221220b018c143c5907dfaa23a23548bf6b5357281e4fff9d451afdeb6b709adaabff264736f6c634300080c0033";

type CapETHPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapETHPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapETHPoolMock__factory extends ContractFactory {
  constructor(...args: CapETHPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapETHPoolMock> {
    return super.deploy(_rewards, overrides || {}) as Promise<CapETHPoolMock>;
  }
  override getDeployTransaction(
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rewards, overrides || {});
  }
  override attach(address: string): CapETHPoolMock {
    return super.attach(address) as CapETHPoolMock;
  }
  override connect(signer: Signer): CapETHPoolMock__factory {
    return super.connect(signer) as CapETHPoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapETHPoolMockInterface {
    return new utils.Interface(_abi) as CapETHPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapETHPoolMock {
    return new Contract(address, _abi, signerOrProvider) as CapETHPoolMock;
  }
}
