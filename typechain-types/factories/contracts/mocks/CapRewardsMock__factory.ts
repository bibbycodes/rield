/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CapRewardsMock,
  CapRewardsMockInterface,
} from "../../../contracts/mocks/CapRewardsMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollectRewards",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collectReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cumulativeRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClaimableReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "notifyRewardReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trading",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "updateRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161042838038061042883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610395806100936000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063835c2840116100ad578063e38a195b11610071578063e38a195b14610206578063e5a6b10f14610214578063ec44acf2146101de578063f887ea40146101de578063fc0c546a1461022557600080fd5b8063835c2840146101e557806388d52ef7146101ec5780638da5cb5b146101de5780639d8e2177146101ff578063c0d786551461016e57600080fd5b806319ab453c116100f457806319ab453c146101a657806354c5aee1146101d65780635fd619651461016e57806361d027b3146101de578063706b3f5e1461015957600080fd5b80630700037d14610126578063137ee36e1461015957806313af40351461016e57806316f0115b14610181575b600080fd5b6101466101343660046102f4565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b33600090815260026020526040902054610146565b61017f61017c3660046102f4565b50565b005b6001546001600160a01b03165b6040516001600160a01b039091168152602001610150565b61017f6101b43660046102f4565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61017f610238565b600061018e565b6000610146565b60015461018e906001600160a01b031681565b6001610146565b61017f61017c366004610324565b6000546001600160a01b031661018e565b60005461018e906001600160a01b031681565b60005460405163a9059cbb60e01b8152336004820152670de0b6b3a764000060248201526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b4919061033d565b50604051670de0b6b3a7640000815233907f2a2d1456672a2b5013c6d74f8677f133bbf5f7d5bb6be09231f7814782b9a7179060200160405180910390a2565b60006020828403121561030657600080fd5b81356001600160a01b038116811461031d57600080fd5b9392505050565b60006020828403121561033657600080fd5b5035919050565b60006020828403121561034f57600080fd5b8151801515811461031d57600080fdfea2646970667358221220abefc12f800231d09a45768b63d8925a4b3ac4056d1b5fa95705d1c27c3643ae64736f6c634300080c0033";

type CapRewardsMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapRewardsMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapRewardsMock__factory extends ContractFactory {
  constructor(...args: CapRewardsMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapRewardsMock> {
    return super.deploy(_token, overrides || {}) as Promise<CapRewardsMock>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): CapRewardsMock {
    return super.attach(address) as CapRewardsMock;
  }
  override connect(signer: Signer): CapRewardsMock__factory {
    return super.connect(signer) as CapRewardsMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapRewardsMockInterface {
    return new utils.Interface(_abi) as CapRewardsMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapRewardsMock {
    return new Contract(address, _abi, signerOrProvider) as CapRewardsMock;
  }
}
