/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Oracle,
  OracleInterface,
} from "../../../../contracts/mocks/CapImplementations/Oracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "productId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "SettlementError",
    type: "event",
  },
  {
    inputs: [],
    name: "costPerRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darkOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "productIds",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "currencies",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "directions",
        type: "bool[]",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    name: "liquidatePositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestsPerFunding",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestsSinceFunding",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestsPerFunding",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_costPerRequest",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "productIds",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "currencies",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "directions",
        type: "bool[]",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    name: "settleOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trading",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526064600555660221b262dd800060065534801561002057600080fd5b50600080546001600160a01b03191633179055610ce2806100426000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063c0d7865511610066578063c0d786551461018e578063cc064c8c146101a1578063ec44acf2146101b4578063f887ea40146101c757600080fd5b80638da5cb5b1461015f578063a9b3f17714610172578063c0324c771461017b57600080fd5b80630e99abc0146100d457806313af4035146100f057806330f6a8891461010557806344787b3e1461011857806361d027b3146101215780638c6909f71461014c575b600080fd5b6100dd60075481565b6040519081526020015b60405180910390f35b6101036100fe3660046108f6565b6101da565b005b610103610113366004610966565b61022f565b6100dd60055481565b600354610134906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b600254610134906001600160a01b031681565b600054610134906001600160a01b031681565b6100dd60065481565b610103610189366004610a57565b6103f6565b61010361019c3660046108f6565b61042b565b6101036101af366004610966565b6105f8565b600454610134906001600160a01b031681565b600154610134906001600160a01b031681565b6000546001600160a01b0316331461020d5760405162461bcd60e51b815260040161020490610a79565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146102785760405162461bcd60e51b815260206004820152600c60248201526b216461726b2d6f7261636c6560a01b6044820152606401610204565b60005b898110156103e05760008b8b8381811061029757610297610a99565b90506020020160208101906102ac91906108f6565b905060008a8a848181106102c2576102c2610a99565b90506020020135905060008989858181106102df576102df610a99565b90506020020160208101906102f491906108f6565b9050600088888681811061030a5761030a610a99565b905060200201602081019061031f9190610aaf565b6004549091506001600160a01b03166321465739858585858c8c8c81811061034957610349610a99565b60405160e089901b6001600160e01b03191681526001600160a01b0397881660048201526024810196909652939095166044850152901515606484015260209091020135608482015260a4019050600060405180830381600087803b1580156103b157600080fd5b505af11580156103c5573d6000803e3d6000fd5b505050505050505080806103d890610ae7565b91505061027b565b506103ea89610827565b50505050505050505050565b6000546001600160a01b031633146104205760405162461bcd60e51b815260040161020490610a79565b600591909155600655565b6000546001600160a01b031633146104555760405162461bcd60e51b815260040161020490610a79565b600180546001600160a01b0319166001600160a01b03831690811790915560408051637622567960e11b8152905163ec44acf2916004808201926020929091908290030181865afa1580156104ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d29190610b02565b600480546001600160a01b0319166001600160a01b03928316178155600154604080516361d027b360e01b8152905191909316926361d027b392818101926020929091908290030181865afa15801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190610b02565b600380546001600160a01b0319166001600160a01b0392831617905560015460408051638c6909f760e01b815290519190921691638c6909f79160048083019260209291908290030181865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190610b02565b600280546001600160a01b0319166001600160a01b039290921691909117905550565b6002546001600160a01b031633146106415760405162461bcd60e51b815260206004820152600c60248201526b216461726b2d6f7261636c6560a01b6044820152606401610204565b60005b898110156103e05760008b8b8381811061066057610660610a99565b905060200201602081019061067591906108f6565b9050600088888481811061068b5761068b610a99565b90506020020160208101906106a091906108f6565b905060008b8b858181106106b6576106b6610a99565b90506020020135905060008888868181106106d3576106d3610a99565b90506020020160208101906106e89190610aaf565b6004549091506001600160a01b0316636b62da40858486858c8c8c81811061071257610712610a99565b60405160e089901b6001600160e01b03191681526001600160a01b0397881660048201526024810196909652939095166044850152901515606484015260209091020135608482015260a4019050600060405180830381600087803b15801561077a57600080fd5b505af192505050801561078b575060015b61081057610797610b1f565b806308c379a0141561080457506107ac610b76565b806107b75750610806565b846001600160a01b03167f2478066a5f86cafc1910161e6dcae4501dfb0fa59d20d9ef13970a6f9c28d816858585856040516107f69493929190610c00565b60405180910390a250610810565b505b3d6000803e3d6000fd5b50505050808061081f90610ae7565b915050610644565b8061082f5750565b80600760008282546108419190610c75565b9091555050600554600754106108de5760006007556003546002546005546006546001600160a01b039384169363a5a01c5d93169161087f91610c8d565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156108c557600080fd5b505af11580156108d9573d6000803e3d6000fd5b505050505b50565b6001600160a01b03811681146108de57600080fd5b60006020828403121561090857600080fd5b8135610913816108e1565b9392505050565b60008083601f84011261092c57600080fd5b50813567ffffffffffffffff81111561094457600080fd5b6020830191508360208260051b850101111561095f57600080fd5b9250929050565b60008060008060008060008060008060a08b8d03121561098557600080fd5b8a3567ffffffffffffffff8082111561099d57600080fd5b6109a98e838f0161091a565b909c509a5060208d01359150808211156109c257600080fd5b6109ce8e838f0161091a565b909a50985060408d01359150808211156109e757600080fd5b6109f38e838f0161091a565b909850965060608d0135915080821115610a0c57600080fd5b610a188e838f0161091a565b909650945060808d0135915080821115610a3157600080fd5b50610a3e8d828e0161091a565b915080935050809150509295989b9194979a5092959850565b60008060408385031215610a6a57600080fd5b50508035926020909101359150565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610ac157600080fd5b8135801515811461091357600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610afb57610afb610ad1565b5060010190565b600060208284031215610b1457600080fd5b8151610913816108e1565b600060033d1115610b385760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff81118282101715610b6f57634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015610b845790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715610bb457505050505090565b8285019150815181811115610bcc5750505050505090565b843d8701016020828501011115610be65750505050505090565b610bf560208286010187610b3b565b509095945050505050565b60018060a01b0385168152600060208581840152841515604084015260806060840152835180608085015260005b81811015610c4a5785810183015185820160a001528201610c2e565b81811115610c5c57600060a083870101525b50601f01601f19169290920160a0019695505050505050565b60008219821115610c8857610c88610ad1565b500190565b6000816000190483118215151615610ca757610ca7610ad1565b50029056fea26469706673582212208837786f723e5364c2fc8a0d309daa743c535de3c4795797ea93a3f3c95e20b764736f6c634300080c0033";

type OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oracle__factory extends ContractFactory {
  constructor(...args: OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Oracle> {
    return super.deploy(overrides || {}) as Promise<Oracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Oracle {
    return super.attach(address) as Oracle;
  }
  override connect(signer: Signer): Oracle__factory {
    return super.connect(signer) as Oracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new utils.Interface(_abi) as OracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}
