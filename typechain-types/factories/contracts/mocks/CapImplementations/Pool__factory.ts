/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Pool,
  PoolInterface,
} from "../../../../contracts/mocks/CapImplementations/Pool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "clpAmount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "clpAmount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "creditUserProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrencyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUtilization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDepositTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDepositTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_utilizationMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_withdrawFee",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trading",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "utilizationMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currencyAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052601e600355606460065569d3c21bcecceda1000000600755610e10600b5534801561002e57600080fd5b5060405161173f38038061173f83398101604081905261004d91610080565b60008054336001600160a01b031991821617909155600480549091166001600160a01b03929092169190911790556100b0565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b611680806100bf6000396000f3fe6080604052600436106101175760003560e01c80639ec5a8941161009a578063ec44acf211610061578063ec44acf2146102dd578063ed683504146102fd578063f887ea401461031d578063fa5a2e621461033d578063fbbc7d7f1461035357005b80639ec5a89414610254578063b6b55f2514610274578063c0d7865514610287578063e5a6b10f146102a7578063e941fa78146102c757005b80637eb71131116100de5780637eb71131146101b55780637ece45e8146101ca5780638da5cb5b146101ea578063934472f5146102225780639d8e21771461023857005b806313af40351461012057806318160ddd1461014057806323548b8b146101695780632e1a7d4d1461017f5780635b3829891461019f57005b3661011e57005b005b34801561012c57600080fd5b5061011e61013b366004611328565b610373565b34801561014c57600080fd5b5061015660095481565b6040519081526020015b60405180910390f35b34801561017557600080fd5b5061015660075481565b34801561018b57600080fd5b5061011e61019a366004611345565b6103c8565b3480156101ab57600080fd5b5061015660065481565b3480156101c157600080fd5b50610156610765565b3480156101d657600080fd5b5061011e6101e536600461135e565b6107a0565b3480156101f657600080fd5b5060005461020a906001600160a01b031681565b6040516001600160a01b039091168152602001610160565b34801561022e57600080fd5b50610156600b5481565b34801561024457600080fd5b50610156670de0b6b3a764000081565b34801561026057600080fd5b5060055461020a906001600160a01b031681565b61011e610282366004611345565b6107de565b34801561029357600080fd5b5061011e6102a2366004611328565b6109ca565b3480156102b357600080fd5b5060045461020a906001600160a01b031681565b3480156102d357600080fd5b5061015660035481565b3480156102e957600080fd5b5060025461020a906001600160a01b031681565b34801561030957600080fd5b50610156610318366004611328565b610b1b565b34801561032957600080fd5b5060015461020a906001600160a01b031681565b34801561034957600080fd5b50610156600c5481565b34801561035f57600080fd5b5061011e61036e366004611390565b610b76565b6000546001600160a01b031633146103a65760405162461bcd60e51b815260040161039d906113bc565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600081116104025760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b604482015260640161039d565b600b54336000908152600a602052604090205461041f91906113f2565b42116104595760405162461bcd60e51b815260206004820152600960248201526810b1b7b7b63237bbb760b91b604482015260640161039d565b600554604051635fd6196560e01b81523360048201526001600160a01b0390911690635fd6196590602401600060405180830381600087803b15801561049e57600080fd5b505af11580156104b2573d6000803e3d6000fd5b5050505060006104c0610c1a565b90506000811180156104d457506000600954115b6105095760405162461bcd60e51b815260206004820152600660248201526521656d70747960d01b604482015260640161039d565b6000610513610765565b905061271081106105555760405162461bcd60e51b815260206004820152600c60248201526b10baba34b634bd30ba34b7b760a11b604482015260640161039d565b60008260095485610566919061140a565b6105709190611429565b3360009081526008602052604090205490915081106105b45750336000908152600860205260409020546009546105a7848361140a565b6105b19190611429565b93505b60006127106105c3848261144b565b6105cd908661140a565b6105d79190611429565b905060006127106003546127106105ee919061144b565b6105f8908861140a565b6106029190611429565b9050818111156106495760405162461bcd60e51b815260206004820152601260248201527121617661696c61626c652d62616c616e636560701b604482015260640161039d565b826009600082825461065b919061144b565b9091555050336000908152600860205260408120805485929061067f90849061144b565b9091555061068f90503382610d4e565b600061069b828861144b565b6005549091506106b4906001600160a01b031682610d4e565b60055460405163e38a195b60e01b8152600481018390526001600160a01b039091169063e38a195b90602401600060405180830381600087803b1580156106fa57600080fd5b505af115801561070e573d6000803e3d6000fd5b505060045460408051868152602081018990526001600160a01b0390921693503392507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567910160405180910390a350505050505050565b600080610770610c1a565b90508061077f57600091505090565b80600654600c54610790919061140a565b61079a9190611429565b91505090565b6000546001600160a01b031633146107ca5760405162461bcd60e51b815260040161039d906113bc565b600b93909355600691909155600755600355565b60006107e8610c1a565b6004549091506001600160a01b031661080f57349150610808828261144b565b9050610818565b61081882610e4f565b600082116108525760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b604482015260640161039d565b60075461085f82846113f2565b11156108985760405162461bcd60e51b81526020600482015260086024820152670216d61782d6361760c41b604482015260640161039d565b60008115806108a75750600954155b6108c95781600954846108ba919061140a565b6108c49190611429565b6108cb565b825b336000818152600a6020526040908190204290556005549051635fd6196560e01b815260048101929092529192506001600160a01b0390911690635fd6196590602401600060405180830381600087803b15801561092857600080fd5b505af115801561093c573d6000803e3d6000fd5b50505050806009600082825461095291906113f2565b909155505033600090815260086020526040812080548392906109769084906113f2565b909155505060045460408051858152602081018490526001600160a01b039092169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a3505050565b6000546001600160a01b031633146109f45760405162461bcd60e51b815260040161039d906113bc565b600180546001600160a01b0319166001600160a01b03831690811790915560408051637622567960e11b8152905163ec44acf2916004808201926020929091908290030181865afa158015610a4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a719190611462565b600280546001600160a01b0319166001600160a01b03928316179055600154600480546040516356e8b9cd60e11b81529084169181019190915291169063add1739a90602401602060405180830381865afa158015610ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af89190611462565b600580546001600160a01b0319166001600160a01b039290921691909117905550565b600060095460001415610b3057506000919050565b6000610b3a610c1a565b6009546001600160a01b03851660009081526008602052604090205491925090610b6590839061140a565b610b6f9190611429565b9392505050565b6002546001600160a01b03163314610bbb5760405162461bcd60e51b81526020600482015260086024820152672174726164696e6760c01b604482015260640161039d565b80610bc4575050565b6000610bce610c1a565b9050808210610c0a5760405162461bcd60e51b81526020600482015260086024820152672162616c616e636560c01b604482015260640161039d565b610c148383610d4e565b505b5050565b60045460009081906001600160a01b0316610c36575047610ca6565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316906370a0823190602401602060405180830381865afa158015610c7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca3919061147f565b90505b6001546004805460405163067aa55560e51b81526001600160a01b0391821692810192909252600092169063cf54aaa090602401602060405180830381865afa158015610cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1b9190611498565b60ff169050610d2b81600a6115a1565b610d3d670de0b6b3a76400008461140a565b610d479190611429565b9250505090565b801580610d6257506001600160a01b038216155b15610d6b575050565b6001546004805460405163067aa55560e51b81526001600160a01b0391821692810192909252600092169063cf54aaa090602401602060405180830381865afa158015610dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de09190611498565b60ff169050670de0b6b3a7640000610df982600a6115a1565b610e03908461140a565b610e0d9190611429565b6004549092506001600160a01b0316610e3857610e336001600160a01b03841683610f0c565b610c14565b600454610c14906001600160a01b03168484611025565b6001546004805460405163067aa55560e51b81526001600160a01b0391821692810192909252600092169063cf54aaa090602401602060405180830381865afa158015610ea0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec49190611498565b60ff169050670de0b6b3a7640000610edd82600a6115a1565b610ee7908461140a565b610ef19190611429565b600454909250610c16906001600160a01b0316333085611088565b80471015610f5c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161039d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610fa9576040519150601f19603f3d011682016040523d82523d6000602084013e610fae565b606091505b5050905080610c145760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161039d565b6040516001600160a01b038316602482015260448101829052610c1490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526110c6565b6040516001600160a01b03808516602483015283166044820152606481018290526110c09085906323b872dd60e01b90608401611051565b50505050565b600061111b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111989092919063ffffffff16565b805190915015610c14578080602001905181019061113991906115ad565b610c145760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161039d565b60606111a784846000856111af565b949350505050565b6060824710156112105760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161039d565b843b61125e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161039d565b600080866001600160a01b0316858760405161127a91906115fb565b60006040518083038185875af1925050503d80600081146112b7576040519150601f19603f3d011682016040523d82523d6000602084013e6112bc565b606091505b50915091506112cc8282866112d7565b979650505050505050565b606083156112e6575081610b6f565b8251156112f65782518084602001fd5b8160405162461bcd60e51b815260040161039d9190611617565b6001600160a01b038116811461132557600080fd5b50565b60006020828403121561133a57600080fd5b8135610b6f81611310565b60006020828403121561135757600080fd5b5035919050565b6000806000806080858703121561137457600080fd5b5050823594602084013594506040840135936060013592509050565b600080604083850312156113a357600080fd5b82356113ae81611310565b946020939093013593505050565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611405576114056113dc565b500190565b6000816000190483118215151615611424576114246113dc565b500290565b60008261144657634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561145d5761145d6113dc565b500390565b60006020828403121561147457600080fd5b8151610b6f81611310565b60006020828403121561149157600080fd5b5051919050565b6000602082840312156114aa57600080fd5b815160ff81168114610b6f57600080fd5b600181815b808511156114f65781600019048211156114dc576114dc6113dc565b808516156114e957918102915b93841c93908002906114c0565b509250929050565b60008261150d5750600161159b565b8161151a5750600061159b565b8160018114611530576002811461153a57611556565b600191505061159b565b60ff84111561154b5761154b6113dc565b50506001821b61159b565b5060208310610133831016604e8410600b8410161715611579575081810a61159b565b61158383836114bb565b8060001904821115611597576115976113dc565b0290505b92915050565b6000610b6f83836114fe565b6000602082840312156115bf57600080fd5b81518015158114610b6f57600080fd5b60005b838110156115ea5781810151838201526020016115d2565b838111156110c05750506000910152565b6000825161160d8184602087016115cf565b9190910192915050565b60208152600082518060208401526116368160408501602087016115cf565b601f01601f1916919091016040019291505056fea264697066735822122092d09604eb392c496a4910f08266e7788793baa2fbc8a6e4247312d3ae73c0fd64736f6c634300080c0033";

type PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pool__factory extends ContractFactory {
  constructor(...args: PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _currency: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pool> {
    return super.deploy(_currency, overrides || {}) as Promise<Pool>;
  }
  override getDeployTransaction(
    _currency: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_currency, overrides || {});
  }
  override attach(address: string): Pool {
    return super.attach(address) as Pool;
  }
  override connect(signer: Signer): Pool__factory {
    return super.connect(signer) as Pool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolInterface {
    return new utils.Interface(_abi) as PoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pool {
    return new Contract(address, _abi, signerOrProvider) as Pool;
  }
}
