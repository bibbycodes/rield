/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Router,
  RouterInterface,
} from "../../../../contracts/mocks/CapImplementations/Router";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "capPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currencies",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currenciesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "darkOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getCapRewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getCapShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getPoolRewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getPoolShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "isSupportedCurrency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "setCapRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "setCapShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_trading",
        type: "address",
      },
      {
        internalType: "address",
        name: "_capPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_darkOracle",
        type: "address",
      },
    ],
    name: "setContracts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_currencies",
        type: "address[]",
      },
    ],
    name: "setCurrencies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "setPoolRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "setPoolShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trading",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610b37806100326000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806391399c60116100c3578063cf54aaa01161007c578063cf54aaa014610348578063ec44acf21461036d578063f2259f9614610380578063f63bf8bd14610393578063f6d1c271146103a6578063fca8d471146103b957600080fd5b806391399c601461028e57806395330f3a146102a1578063add1739a146102b4578063af4f1796146102e0578063bbe4f6db14610309578063ce56a7421461033557600080fd5b806361d027b31161011557806361d027b31461021c5780637dc0d1d01461022f5780638c6909f7146102425780638c7610e6146102555780638d34f97f146102685780638da5cb5b1461027b57600080fd5b806313af40351461015d57806339fadb91146101725780634e847fc7146101895780634fa885aa1461019c578063521d91f9146101e05780635dd06578146101f3575b600080fd5b61017061016b366004610909565b6103dc565b005b6006545b6040519081526020015b60405180910390f35b61017061019736600461092b565b610431565b6101c86101aa366004610909565b6001600160a01b039081166000908152600c60205260409020541690565b6040516001600160a01b039091168152602001610180565b6101706101ee36600461095e565b610489565b610176610201366004610909565b6001600160a01b03166000908152600a602052604090205490565b6004546101c8906001600160a01b031681565b6002546101c8906001600160a01b031681565b6005546101c8906001600160a01b031681565b61017061026336600461092b565b6104cf565b610170610276366004610988565b610527565b6000546101c8906001600160a01b031681565b6003546101c8906001600160a01b031681565b6101706102af36600461095e565b610562565b6101c86102c2366004610909565b6001600160a01b039081166000908152600b60205260409020541690565b6101766102ee366004610909565b6001600160a01b031660009081526009602052604090205490565b6101c8610317366004610909565b6001600160a01b039081166000908152600860205260409020541690565b61017061034336600461092b565b6105a8565b61035b610356366004610909565b610600565b60405160ff9091168152602001610180565b6001546101c8906001600160a01b031681565b61017061038e366004610a0f565b610735565b6101706103a1366004610a46565b61078c565b6101c86103b4366004610aab565b610815565b6103cc6103c7366004610909565b61083f565b6040519015158152602001610180565b6000546001600160a01b0316331461040f5760405162461bcd60e51b815260040161040690610ac4565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461045b5760405162461bcd60e51b815260040161040690610ac4565b6001600160a01b03918216600090815260086020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031633146104b35760405162461bcd60e51b815260040161040690610ac4565b6001600160a01b039091166000908152600a6020526040902055565b6000546001600160a01b031633146104f95760405162461bcd60e51b815260040161040690610ac4565b6001600160a01b039182166000908152600b6020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031633146105515760405162461bcd60e51b815260040161040690610ac4565b61055d60068383610875565b505050565b6000546001600160a01b0316331461058c5760405162461bcd60e51b815260040161040690610ac4565b6001600160a01b03909116600090815260096020526040902055565b6000546001600160a01b031633146105d25760405162461bcd60e51b815260040161040690610ac4565b6001600160a01b039182166000908152600c6020526040902080546001600160a01b03191691909216179055565b60006001600160a01b03821661061857506012919050565b6001600160a01b03821660009081526007602052604090205460ff161561065857506001600160a01b031660009081526007602052604090205460ff1690565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190610ae4565b60ff16111561072d57816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107279190610ae4565b92915050565b506012919050565b6000546001600160a01b0316331461075f5760405162461bcd60e51b815260040161040690610ac4565b6001600160a01b03919091166000908152600760205260409020805460ff191660ff909216919091179055565b6000546001600160a01b031633146107b65760405162461bcd60e51b815260040161040690610ac4565b600480546001600160a01b03199081166001600160a01b03978816179091556001805482169587169590951790945560038054851693861693909317909255600280548416918516919091179055600580549092169216919091179055565b6006818154811061082557600080fd5b6000918252602090912001546001600160a01b0316905081565b60006001600160a01b038216158015906107275750506001600160a01b0390811660009081526008602052604090205416151590565b8280548282559060005260206000209081019282156108c8579160200282015b828111156108c85781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610895565b506108d49291506108d8565b5090565b5b808211156108d457600081556001016108d9565b80356001600160a01b038116811461090457600080fd5b919050565b60006020828403121561091b57600080fd5b610924826108ed565b9392505050565b6000806040838503121561093e57600080fd5b610947836108ed565b9150610955602084016108ed565b90509250929050565b6000806040838503121561097157600080fd5b61097a836108ed565b946020939093013593505050565b6000806020838503121561099b57600080fd5b823567ffffffffffffffff808211156109b357600080fd5b818501915085601f8301126109c757600080fd5b8135818111156109d657600080fd5b8660208260051b85010111156109eb57600080fd5b60209290920196919550909350505050565b60ff81168114610a0c57600080fd5b50565b60008060408385031215610a2257600080fd5b610a2b836108ed565b91506020830135610a3b816109fd565b809150509250929050565b600080600080600060a08688031215610a5e57600080fd5b610a67866108ed565b9450610a75602087016108ed565b9350610a83604087016108ed565b9250610a91606087016108ed565b9150610a9f608087016108ed565b90509295509295909350565b600060208284031215610abd57600080fd5b5035919050565b60208082526006908201526510b7bbb732b960d11b604082015260600190565b600060208284031215610af657600080fd5b8151610924816109fd56fea26469706673582212204e5bbdcc69537f48bf8cf61e45450dc7893a87702bc619aa0f23feabe6a3006764736f6c634300080c0033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Router> {
    return super.deploy(overrides || {}) as Promise<Router>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Router {
    return super.attach(address) as Router;
  }
  override connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
