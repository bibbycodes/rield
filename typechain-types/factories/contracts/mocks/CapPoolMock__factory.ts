/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CapPoolMock,
  CapPoolMockInterface,
} from "../../../contracts/mocks/CapPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrencyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currencyAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052670de0b6b3a76400006000556001805460ff1916600617905534801561002957600080fd5b506040516107ae3803806107ae8339810160408190526100489161007b565b6001600160a01b039182166080521660a0526100ae565b80516001600160a01b038116811461007657600080fd5b919050565b6000806040838503121561008e57600080fd5b6100978361005f565b91506100a56020840161005f565b90509250929050565b60805160a0516106c96100e560003960005050600081816101340152818161018b0152818161023d01526102bd01526106c96000f3fe60806040526004361061003f5760003560e01c80632e1a7d4d14610044578063b6b55f2514610059578063ed6835041461006c578063fc7e286d146100b4575b600080fd5b6100576100523660046104ad565b6100e1565b005b6100576100673660046104ad565b61023b565b34801561007857600080fd5b506100a26100873660046104c6565b6001600160a01b031660009081526002602052604090205490565b60405190815260200160405180910390f35b3480156100c057600080fd5b506100a26100cf3660046104c6565b60026020526000908152604090205481565b6000546001546100f59060ff16600a6105f2565b6100ff9083610601565b6101099190610620565b3360009081526002602052604081208054929350839290919061012d908490610642565b90915550507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661016f5761016a338261038a565b610202565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102009190610659565b505b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610270575034610334565b6000546001546102849060ff16600a6105f2565b61028e9083610601565b6102989190610620565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561030e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103329190610659565b505b336000908152600260205260408120805483929061035390849061067b565b909155505060405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90602001610230565b804710156103df5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461042c576040519150601f19603f3d011682016040523d82523d6000602084013e610431565b606091505b50509050806104a85760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103d6565b505050565b6000602082840312156104bf57600080fd5b5035919050565b6000602082840312156104d857600080fd5b81356001600160a01b03811681146104ef57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561054757816000190482111561052d5761052d6104f6565b8085161561053a57918102915b93841c9390800290610511565b509250929050565b60008261055e575060016105ec565b8161056b575060006105ec565b8160018114610581576002811461058b576105a7565b60019150506105ec565b60ff84111561059c5761059c6104f6565b50506001821b6105ec565b5060208310610133831016604e8410600b84101617156105ca575081810a6105ec565b6105d4838361050c565b80600019048211156105e8576105e86104f6565b0290505b92915050565b60006104ef60ff84168361054f565b600081600019048311821515161561061b5761061b6104f6565b500290565b60008261063d57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610654576106546104f6565b500390565b60006020828403121561066b57600080fd5b815180151581146104ef57600080fd5b6000821982111561068e5761068e6104f6565b50019056fea2646970667358221220604ae6c8b2b8569f12c4352e5ca22293b5b2eb1b554f337f5ba41253cff4fec064736f6c634300080c0033";

type CapPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapPoolMock__factory extends ContractFactory {
  constructor(...args: CapPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapPoolMock> {
    return super.deploy(
      _token,
      _rewards,
      overrides || {}
    ) as Promise<CapPoolMock>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _rewards, overrides || {});
  }
  override attach(address: string): CapPoolMock {
    return super.attach(address) as CapPoolMock;
  }
  override connect(signer: Signer): CapPoolMock__factory {
    return super.connect(signer) as CapPoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapPoolMockInterface {
    return new utils.Interface(_abi) as CapPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapPoolMock {
    return new Contract(address, _abi, signerOrProvider) as CapPoolMock;
  }
}
