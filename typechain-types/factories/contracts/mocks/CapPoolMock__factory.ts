/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CapPoolMock,
  CapPoolMockInterface,
} from "../../../contracts/mocks/CapPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrencyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currencyAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052670de0b6b3a76400006000556001805460ff1916600617905534801561002957600080fd5b5060405161089c38038061089c8339810160408190526100489161007b565b6001600160a01b039182166080521660a0526100ae565b80516001600160a01b038116811461007657600080fd5b919050565b6000806040838503121561008e57600080fd5b6100978361005f565b91506100a56020840161005f565b90509250929050565b60805160a0516107b76100e5600039600050506000818161015b015281816101b20152818161026401526102e401526107b76000f3fe60806040526004361061003f5760003560e01c80632e1a7d4d14610044578063b6b55f2514610059578063ed6835041461006c578063fc7e286d146100b4575b600080fd5b61005761005236600461053e565b6100e1565b005b61005761006736600461053e565b610262565b34801561007857600080fd5b506100a2610087366004610557565b6001600160a01b031660009081526002602052604090205490565b60405190815260200160405180910390f35b3480156100c057600080fd5b506100a26100cf366004610557565b60026020526000908152604090205481565b61010b60405180604001604052806008815260200167776974686472617760c01b815250826103b1565b336000908152600260205260408120805483929061012a90849061059d565b90915550506000546001546101439060ff16600a61069a565b61014d90836106a9565b61015791906106c8565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166101965761019133826103fa565b610229565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610203573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022791906106ea565b505b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661029757503461035b565b6000546001546102ab9060ff16600a61069a565b6102b590836106a9565b6102bf91906106c8565b6040516323b872dd60e01b8152336004820152306024820152604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035991906106ea565b505b336000908152600260205260408120805483929061037a90849061070c565b909155505060405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90602001610257565b6103f682826040516024016103c7929190610724565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261051d565b5050565b8047101561044f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461049c576040519150601f19603f3d011682016040523d82523d6000602084013e6104a1565b606091505b50509050806105185760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610446565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006020828403121561055057600080fd5b5035919050565b60006020828403121561056957600080fd5b81356001600160a01b038116811461058057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156105af576105af610587565b500390565b600181815b808511156105ef5781600019048211156105d5576105d5610587565b808516156105e257918102915b93841c93908002906105b9565b509250929050565b60008261060657506001610694565b8161061357506000610694565b816001811461062957600281146106335761064f565b6001915050610694565b60ff84111561064457610644610587565b50506001821b610694565b5060208310610133831016604e8410600b8410161715610672575081810a610694565b61067c83836105b4565b806000190482111561069057610690610587565b0290505b92915050565b600061058060ff8416836105f7565b60008160001904831182151516156106c3576106c3610587565b500290565b6000826106e557634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156106fc57600080fd5b8151801515811461058057600080fd5b6000821982111561071f5761071f610587565b500190565b604081526000835180604084015260005b818110156107525760208187018101516060868401015201610735565b81811115610764576000606083860101525b50602083019390935250601f91909101601f19160160600191905056fea264697066735822122062742a951b161a9ebcd9d2cc96de3573ac203c9fe23c1cc71845e076f644db5d64736f6c634300080c0033";

type CapPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapPoolMock__factory extends ContractFactory {
  constructor(...args: CapPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapPoolMock> {
    return super.deploy(
      _token,
      _rewards,
      overrides || {}
    ) as Promise<CapPoolMock>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _rewards, overrides || {});
  }
  override attach(address: string): CapPoolMock {
    return super.attach(address) as CapPoolMock;
  }
  override connect(signer: Signer): CapPoolMock__factory {
    return super.connect(signer) as CapPoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapPoolMockInterface {
    return new utils.Interface(_abi) as CapPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapPoolMock {
    return new Contract(address, _abi, signerOrProvider) as CapPoolMock;
  }
}
