/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CapPoolMock,
  CapPoolMockInterface,
} from "../../../contracts/mocks/CapPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "UNIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "creditUserProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrencyBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUtilization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDepositTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDepositTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_utilizationMultiplier",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_withdrawFee",
        type: "uint256",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trading",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDecrease",
        type: "bool",
      },
    ],
    name: "updateOpenInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "utilizationMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currencyAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516108e13803806108e183398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a05161080b6100d6600039600061022601526000818161026c015281816103340152818161038b0152818161043d0152610492015261080b6000f3fe6080604052600436106101405760003560e01c80639ec5a894116100b6578063ed6835041161006f578063ed68350414610290578063f887ea40146101db578063f8b2cb4f14610290578063fa5a2e6214610165578063fbbc7d7f146102c6578063fc7e286d146102e157600080fd5b80639ec5a89414610217578063b6b55f251461024a578063c0d7865514610145578063e5a6b10f1461025d578063e941fa7814610165578063ec44acf2146101db57600080fd5b80635b382989116101085780635b382989146101655780637eb71131146101655780637ece45e8146101ba5780638da5cb5b146101db578063934472f5146101655780639d8e21771461020357600080fd5b806313af40351461014557806318160ddd1461016557806323548b8b146101655780632e1a7d4d14610188578063532f66901461019b575b600080fd5b34801561015157600080fd5b5061016361016036600461069e565b50565b005b34801561017157600080fd5b5060005b6040519081526020015b60405180910390f35b6101636101963660046106c0565b61030e565b3480156101a757600080fd5b506101636101b63660046106e7565b5050565b3480156101c657600080fd5b506101636101d5366004610717565b50505050565b3480156101e757600080fd5b5060005b6040516001600160a01b03909116815260200161017f565b34801561020f57600080fd5b506001610175565b34801561022357600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101eb565b6101636102583660046106c0565b61043b565b34801561026957600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101eb565b34801561029c57600080fd5b506101756102ab36600461069e565b6001600160a01b031660009081526020819052604090205490565b3480156102d257600080fd5b506101636101b6366004610749565b3480156102ed57600080fd5b506101756102fc36600461069e565b60006020819052908152604090205481565b336000908152602081905260408120805483929061032d908490610789565b90915550507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661036f5761036a338261055f565b610402565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156103dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040091906107a0565b505b60405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a250565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610470575034610509565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050791906107a0565b505b33600090815260208190526040812080548392906105289084906107bd565b909155505060405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90602001610430565b804710156105b45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610601576040519150601f19603f3d011682016040523d82523d6000602084013e610606565b606091505b505090508061067d5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105ab565b505050565b80356001600160a01b038116811461069957600080fd5b919050565b6000602082840312156106b057600080fd5b6106b982610682565b9392505050565b6000602082840312156106d257600080fd5b5035919050565b801515811461016057600080fd5b600080604083850312156106fa57600080fd5b82359150602083013561070c816106d9565b809150509250929050565b6000806000806080858703121561072d57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561075c57600080fd5b61076583610682565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561079b5761079b610773565b500390565b6000602082840312156107b257600080fd5b81516106b9816106d9565b600082198211156107d0576107d0610773565b50019056fea26469706673582212202e0f4fc53123f6e16e65ae5374b274abd24e3ad936a69f0f20ce80e7d096cbbc64736f6c634300080c0033";

type CapPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapPoolMock__factory extends ContractFactory {
  constructor(...args: CapPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapPoolMock> {
    return super.deploy(
      _token,
      _rewards,
      overrides || {}
    ) as Promise<CapPoolMock>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _rewards, overrides || {});
  }
  override attach(address: string): CapPoolMock {
    return super.attach(address) as CapPoolMock;
  }
  override connect(signer: Signer): CapPoolMock__factory {
    return super.connect(signer) as CapPoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapPoolMockInterface {
    return new utils.Interface(_abi) as CapPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapPoolMock {
    return new Contract(address, _abi, signerOrProvider) as CapPoolMock;
  }
}
