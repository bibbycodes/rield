/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { GMD, GMDInterface } from "../../../contracts/token/GMD";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "claimableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoverTreasuryTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingMintableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "remainingVestedTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintCap",
        type: "uint256",
      },
    ],
    name: "setMintCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintPrice",
        type: "uint256",
      },
    ],
    name: "setMintPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_mintOpen",
        type: "bool",
      },
    ],
    name: "setOpenMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "setVestingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalMinted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastInteractionTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "VestPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526103e8600855600060095562069780600a55600b80546001600160a81b03191674ff970a61a04b1ca14834a43f5de4533ebddb5cc8001790553480156200004a57600080fd5b506040518060400160405280600381526020016211d35160ea1b8152506040518060400160405280600381526020016211d35160ea1b81525081600390805190602001906200009b9291906200021c565b508051620000b19060049060208401906200021c565b505050620000ce620000c86200010060201b60201c565b62000104565b6001600655620000fa33620000e66012600a620003d7565b620000f49061c350620003ef565b62000156565b62000469565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001b15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001c5919062000411565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200022a906200042c565b90600052602060002090601f0160209004810192826200024e576000855562000299565b82601f106200026957805160ff191683800117855562000299565b8280016001018555821562000299579182015b82811115620002995782518255916020019190600101906200027c565b50620002a7929150620002ab565b5090565b5b80821115620002a75760008155600101620002ac565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000319578160001904821115620002fd57620002fd620002c2565b808516156200030b57918102915b93841c9390800290620002dd565b509250929050565b6000826200033257506001620003d1565b816200034157506000620003d1565b81600181146200035a5760028114620003655762000385565b6001915050620003d1565b60ff841115620003795762000379620002c2565b50506001821b620003d1565b5060208310610133831016604e8410600b8410161715620003aa575081810a620003d1565b620003b68383620002d8565b8060001904821115620003cd57620003cd620002c2565b0290505b92915050565b6000620003e860ff84168362000321565b9392505050565b60008160001904831182151516156200040c576200040c620002c2565b500290565b60008219821115620004275762000427620002c2565b500190565b600181811c908216806200044157607f821691505b602082108114156200046357634e487b7160e01b600052602260045260246000fd5b50919050565b6119d280620004796000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063a0712d68116100a2578063e2af30f411610071578063e2af30f41461041b578063e2e5c15c1461042e578063f2fde38b14610436578063f4a0a5281461044957600080fd5b8063a0712d68146103cf578063a457c2d7146103e2578063a9059cbb146103f5578063dd62ed3e1461040857600080fd5b806384d24226116100de57806384d242261461037357806389a30271146103865780638da5cb5b146103b657806395d89b41146103c757600080fd5b806370a0823114610330578063715018a6146103595780637313ee5a1461036157806376c71ca11461036a57600080fd5b8063313ce5671161018757806342966c681161015657806342966c68146103045780634e274514146103175780634e71d92d1461031f5780636817c76c1461032757600080fd5b8063313ce567146102ba57806339509351146102c95780634070a0c9146102dc57806340bee0ed146102f157600080fd5b806318160ddd116101c357806318160ddd146102485780631959a0021461025057806323b872dd1461029a57806324bbd049146102ad57600080fd5b806303c824da146101ea57806306fdde0314610210578063095ea7b314610225575b600080fd5b6101fd6101f8366004611738565b61045c565b6040519081526020015b60405180910390f35b6102186104e6565b604051610207919061177f565b6102386102333660046117b2565b610578565b6040519015158152602001610207565b6002546101fd565b61027f61025e366004611738565b60076020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610207565b6102386102a83660046117dc565b610590565b600b546102389060ff1681565b60405160128152602001610207565b6102386102d73660046117b2565b6105b4565b6102ef6102ea366004611818565b6105d6565b005b6102ef6102ff366004611818565b6105e3565b6102ef610312366004611818565b610646565b6102ef610653565b6102ef6106fa565b6101fd60085481565b6101fd61033e366004611738565b6001600160a01b031660009081526020819052604090205490565b6102ef6108b0565b6101fd600a5481565b6101fd60095481565b6101fd610381366004611738565b6108c2565b600b5461039e9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610207565b6005546001600160a01b031661039e565b610218610966565b6102ef6103dd366004611818565b610975565b6102386103f03660046117b2565b610c0f565b6102386104033660046117b2565b610c8a565b6101fd610416366004611831565b610c98565b6102ef610429366004611872565b610cc3565b6101fd610cde565b6102ef610444366004611738565b610d53565b6102ef610457366004611818565b610dc9565b6001600160a01b0381166000908152600760205260408120600101548190610485904290610e28565b6001600160a01b03841660009081526007602052604090206002015490915081106104b35750600092915050565b6001600160a01b0383166000908152600760205260409020600201546104d99082610e28565b9392505050565b50919050565b6060600380546104f59061188f565b80601f01602080910402602001604051908101604052809291908181526020018280546105219061188f565b801561056e5780601f106105435761010080835404028352916020019161056e565b820191906000526020600020905b81548152906001019060200180831161055157829003601f168201915b5050505050905090565b600033610586818585610e34565b5060019392505050565b60003361059e858285610f59565b6105a9858585610fd3565b506001949350505050565b6000336105868185856105c78383610c98565b6105d191906118da565b610e34565b6105de611177565b600955565b6105eb611177565b6203f48081101580156106015750620697808111155b6106415760405162461bcd60e51b815260206004820152600c60248201526b6e6f7420696e2072616e676560a01b60448201526064015b60405180910390fd5b600a55565b61065033826111d1565b50565b61065b611177565b6106f86106706005546001600160a01b031690565b600b546040516370a0823160e01b81523060048201526101009091046001600160a01b0316906370a0823190602401602060405180830381865afa1580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e091906118f2565b600b5461010090046001600160a01b03169190611300565b565b610702611363565b336000908152600760205260409020546107485760405162461bcd60e51b81526020600482015260076024820152661b9bc81b5a5b9d60ca1b6044820152606401610638565b33600090815260076020526040812060010154610766904290610e28565b336000908152600760205260408120600201549192509082106107a357503360009081526007602052604081208054600290910191909155610802565b336000908152600760205260409020600281015490546107ce91906107c890856113bd565b906113c9565b336000908152600760205260409020600201549091506107ee9083610e28565b336000908152600760205260409020600201555b3360009081526007602052604090205461081c9082610e28565b336000818152600760205260409081902092835542600190930192909255905163a9059cbb60e01b8152600481019190915260248101829052309063a9059cbb906044016020604051808303816000875af115801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a3919061190b565b5050506106f86001600655565b6108b8611177565b6106f860006113d5565b6001600160a01b03811660009081526007602052604081206001015481906108eb904290610e28565b6001600160a01b03841660009081526007602052604081206002015491925090821061093057506001600160a01b0383166000908152600760205260409020546104d9565b6001600160a01b03841660009081526007602052604090206002810154905461095e91906107c890856113bd565b949350505050565b6060600480546104f59061188f565b61097d611363565b63773594008111156109c85760405162461bcd60e51b81526020600482015260146024820152730dac2f0406460606040eae6c8c640e0cae440e8f60631b6044820152606401610638565b600b5460ff16610a0c5760405162461bcd60e51b815260206004820152600f60248201526e1b5a5b9d081b9bdd081bdc195b9959608a1b6044820152606401610638565b600b546040516370a0823160e01b8152336004820152829161010090046001600160a01b0316906370a0823190602401602060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d91906118f2565b1015610ac25760405162461bcd60e51b8152602060048201526014602482015273555344432062616c616e636520746f6f206c6f7760601b6044820152606401610638565b6000610ad38264e8d4a510006113bd565b90506000610af26008546107c86103e8856113bd90919063ffffffff16565b9050600954610b6382306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d91906118f2565b90611427565b1115610ba15760405162461bcd60e51b815260206004820152600d60248201526c06f766572206d696e742063617609c1b6044820152606401610638565b33600090815260076020526040902054610bbb9082611427565b336000908152600760205260409020908155426001820155600a54600290910155610be63082611433565b600b54610c039061010090046001600160a01b03163330866114f2565b50506106506001600655565b60003381610c1d8286610c98565b905083811015610c7d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610638565b6105a98286868403610e34565b600033610586818585610fd3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610ccb611177565b600b805460ff1916911515919091179055565b6000610d4e306001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4591906118f2565b60095490610e28565b905090565b610d5b611177565b6001600160a01b038116610dc05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610638565b610650816113d5565b610dd1611177565b600854811015610e235760405162461bcd60e51b815260206004820152601d60248201527f63616e2774206265206c6f776572207468616e206c617374206d696e740000006044820152606401610638565b600855565b60006104d98284611928565b6001600160a01b038316610e965760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610638565b6001600160a01b038216610ef75760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610638565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610f658484610c98565b90506000198114610fcd5781811015610fc05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610638565b610fcd8484848403610e34565b50505050565b6001600160a01b0383166110375760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610638565b6001600160a01b0382166110995760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610638565b6001600160a01b038316600090815260208190526040902054818110156111115760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610638565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610fcd565b6005546001600160a01b031633146106f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610638565b6001600160a01b0382166112315760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610638565b6001600160a01b038216600090815260208190526040902054818110156112a55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610638565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f4c565b505050565b6040516001600160a01b0383166024820152604481018290526112fb90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261152a565b600260065414156113b65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610638565b6002600655565b60006104d9828461193f565b60006104d9828461195e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006104d982846118da565b6001600160a01b0382166114895760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610638565b806002600082825461149b91906118da565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610fcd9085906323b872dd60e01b9060840161132c565b600061157f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115fc9092919063ffffffff16565b8051909150156112fb578080602001905181019061159d919061190b565b6112fb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610638565b606061095e848460008585600080866001600160a01b031685876040516116239190611980565b60006040518083038185875af1925050503d8060008114611660576040519150601f19603f3d011682016040523d82523d6000602084013e611665565b606091505b509150915061167687838387611681565b979650505050505050565b606083156116ed5782516116e6576001600160a01b0385163b6116e65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610638565b508161095e565b61095e83838151156117025781518083602001fd5b8060405162461bcd60e51b8152600401610638919061177f565b80356001600160a01b038116811461173357600080fd5b919050565b60006020828403121561174a57600080fd5b6104d98261171c565b60005b8381101561176e578181015183820152602001611756565b83811115610fcd5750506000910152565b602081526000825180602084015261179e816040850160208701611753565b601f01601f19169190910160400192915050565b600080604083850312156117c557600080fd5b6117ce8361171c565b946020939093013593505050565b6000806000606084860312156117f157600080fd5b6117fa8461171c565b92506118086020850161171c565b9150604084013590509250925092565b60006020828403121561182a57600080fd5b5035919050565b6000806040838503121561184457600080fd5b61184d8361171c565b915061185b6020840161171c565b90509250929050565b801515811461065057600080fd5b60006020828403121561188457600080fd5b81356104d981611864565b600181811c908216806118a357607f821691505b602082108114156104e057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156118ed576118ed6118c4565b500190565b60006020828403121561190457600080fd5b5051919050565b60006020828403121561191d57600080fd5b81516104d981611864565b60008282101561193a5761193a6118c4565b500390565b6000816000190483118215151615611959576119596118c4565b500290565b60008261197b57634e487b7160e01b600052601260045260246000fd5b500490565b60008251611992818460208701611753565b919091019291505056fea2646970667358221220d54a42fe833c89909ebc5cc2d524b04d00c81d8a8d1e2740a6a0ce73bc1c888d64736f6c634300080c0033";

type GMDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMD__factory extends ContractFactory {
  constructor(...args: GMDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GMD> {
    return super.deploy(overrides || {}) as Promise<GMD>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GMD {
    return super.attach(address) as GMD;
  }
  override connect(signer: Signer): GMD__factory {
    return super.connect(signer) as GMD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMDInterface {
    return new utils.Interface(_abi) as GMDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): GMD {
    return new Contract(address, _abi, signerOrProvider) as GMD;
  }
}
