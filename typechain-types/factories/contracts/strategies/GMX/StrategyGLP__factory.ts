/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StrategyGLP,
  StrategyGLPInterface,
} from "../../../../contracts/strategies/GMX/StrategyGLP";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "callFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "beefyFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strategistFees",
        type: "uint256",
      },
    ],
    name: "ChargedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beefyFeeConfig",
        type: "address",
      },
    ],
    name: "SetBeefyFeeConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "beefyFeeRecipient",
        type: "address",
      },
    ],
    name: "SetBeefyFeeRecipient",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "SetKeeper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeId",
        type: "uint256",
      },
    ],
    name: "SetStratFeeId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "strategist",
        type: "address",
      },
    ],
    name: "SetStrategist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "unirouter",
        type: "address",
      },
    ],
    name: "SetUnirouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "SetVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawalFee",
        type: "uint256",
      },
    ],
    name: "SetWithdrawalFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "harvester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantHarvested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "StratHarvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "WITHDRAWAL_FEE_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WITHDRAWAL_MAX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beefyFeeConfig",
    outputs: [
      {
        internalType: "contract IFeeConfig",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beefyFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllFees",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "total",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "beefy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "call",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strategist",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "label",
                type: "string",
              },
              {
                internalType: "bool",
                name: "active",
                type: "bool",
              },
            ],
            internalType: "struct IFeeConfig.FeeCategory",
            name: "performance",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "deposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdraw",
            type: "uint256",
          },
        ],
        internalType: "struct IFeeConfig.AllFees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStratFeeId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "glpRewardStorage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxRewardStorage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callFeeRecipient",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestOnDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_want",
        type: "address",
      },
      {
        internalType: "address",
        name: "_native",
        type: "address",
      },
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_chef",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "unirouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeper",
            type: "address",
          },
          {
            internalType: "address",
            name: "strategist",
            type: "address",
          },
          {
            internalType: "address",
            name: "beefyFeeRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "beefyFeeConfig",
            type: "address",
          },
        ],
        internalType: "struct StratFeeManagerInitializable.CommonAddresses",
        name: "_commonAddresses",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keeper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "native",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retireStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beefyFeeConfig",
        type: "address",
      },
    ],
    name: "setBeefyFeeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beefyFeeRecipient",
        type: "address",
      },
    ],
    name: "setBeefyFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_harvestOnDeposit",
        type: "bool",
      },
    ],
    name: "setHarvestOnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "setKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeId",
        type: "uint256",
      },
    ],
    name: "setStratFeeId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unirouter",
        type: "address",
      },
    ],
    name: "setUnirouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setWithdrawalFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unirouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612991806100206000396000f3fe608060405234801561001057600080fd5b506004361061030c5760003560e01c80638912cb8b1161019d578063d0e30db0116100e9578063e7a7250a116100a2578063f2fde38b1161007c578063f2fde38b146105ec578063fa6db1bc146105ff578063fb61778714610612578063fbfa77cf1461061a57600080fd5b8063e7a7250a146105d3578063e941fa78146105db578063f1a392da146105e357600080fd5b8063d0e30db014610582578063d801d9461461058a578063d92f3d7314610592578063dbaa6ff6146105a5578063dd8f62ca146105b8578063dfbdc437146105cb57600080fd5b8063a8b6c46711610156578063b20feaaf11610130578063b20feaaf1461053f578063b3b3453e14610554578063c1a3d44c14610567578063c7b9d5301461056f57600080fd5b8063a8b6c46714610506578063ac1e502514610519578063aced16611461052c57600080fd5b80638912cb8b146104ab5780638cfc0250146104bf5780638da5cb5b146104c75780638e145459146104d857806397fd323d146104eb578063a68833e5146104f357600080fd5b80634641257d1161025c5780635c975abb11610215578063715018a6116101ef578063715018a614610480578063722713f714610488578063748747e6146104905780638456cb59146104a357600080fd5b80635c975abb1461045657806367a527931461037c5780636817031b1461046d57600080fd5b80634641257d1461041a5780634700d305146104225780634746fb551461042a57806354518b1a1461043d578063547eeac114610446578063573fef0a1461044e57600080fd5b80631f1fcd51116102c9578063257ae0de116102a3578063257ae0de146103d95780632e1a7d4d146103ec5780633e55f932146103ff5780633f4ba83a1461041257600080fd5b80631f1fcd51146103a05780631fc8bc5d146103b35780631fe4a686146103c657600080fd5b806307546172146103115780630e5c011e146103415780630e8fbb5a14610356578063106fdbd014610369578063115880861461037c57806311b0b42d1461038d575b600080fd5b60a054610324906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61035461034f366004612441565b61062d565b005b610354610364366004612473565b610639565b610354610377366004612441565b6106bc565b60005b604051908152602001610338565b609f54610324906001600160a01b031681565b609e54610324906001600160a01b031681565b60a154610324906001600160a01b031681565b609a54610324906001600160a01b031681565b609854610324906001600160a01b031681565b6103546103fa366004612490565b610719565b61035461040d366004612490565b6107b5565b610354610883565b6103546108d4565b6103546108dd565b609c54610324906001600160a01b031681565b61037f61271081565b610354610924565b610354610a51565b60655460ff165b6040519015158152602001610338565b61035461047b366004612441565b610a8d565b610354610ae3565b61037f610af5565b61035461049e366004612441565b610b0f565b610354610b9c565b60a55461045d90600160a01b900460ff1681565b61037f610beb565b6033546001600160a01b0316610324565b609b54610324906001600160a01b031681565b61037f610c59565b610354610501366004612441565b610cbe565b60a254610324906001600160a01b031681565b610354610527366004612490565b610d14565b609954610324906001600160a01b031681565b610547610dc2565b6040516103389190612501565b60a554610324906001600160a01b031681565b61037f610df8565b61035461057d366004612441565b610e29565b610354610ebf565b610354610f04565b6103546105a0366004612441565b610f43565b60a354610324906001600160a01b031681565b6103546105c636600461257e565b610f99565b61037f603281565b61037f611302565b61037f6113f1565b61037f60a65481565b6103546105fa366004612441565b611410565b60a454610324906001600160a01b031681565b610354611486565b609754610324906001600160a01b031681565b610636816116c1565b50565b6033546001600160a01b031633148061065c57506099546001600160a01b031633145b6106815760405162461bcd60e51b8152600401610678906125f8565b60405180910390fd5b60a5805460ff60a01b1916600160a01b8315158102919091179182905560ff910416156106b2576106366000610d14565b610636600a610d14565b6106c4611892565b609c80546001600160a01b0319166001600160a01b0383169081179091556040519081527f91e28ce4210d103c13c5174847e463b836900f8dc63e9d9b42a4255169d19529906020015b60405180910390a150565b6097546001600160a01b031633146107435760405162461bcd60e51b81526004016106789061261a565b600061074d610df8565b90508181111561075a5750805b609754609e54610777916001600160a01b039182169116836118ec565b7f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d6107a0610af5565b60405190815260200160405180910390a15050565b6033546001600160a01b03163314806107d857506099546001600160a01b031633145b6107f45760405162461bcd60e51b8152600401610678906125f8565b609c54604051631f2afc9960e11b8152600481018390526001600160a01b0390911690633e55f93290602401600060405180830381600087803b15801561083a57600080fd5b505af115801561084e573d6000803e3d6000fd5b505050507f9163810ee1e29168d4ce900e48a333fb8fbd3fd070d2bef67f6d4db0846a469f8160405161070e91815260200190565b6033546001600160a01b03163314806108a657506099546001600160a01b031633145b6108c25760405162461bcd60e51b8152600401610678906125f8565b6108ca611954565b6108d26119a1565b565b6108d2326116c1565b6033546001600160a01b031633148061090057506099546001600160a01b031633145b61091c5760405162461bcd60e51b8152600401610678906125f8565b6108d2610b9c565b60975460408051635463173b60e11b815290516000926001600160a01b03169163a8c62e769160048083019260209291908290030181865afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610992919061263a565b9050336001600160a01b038216146109d95760405162461bcd60e51b815260206004820152600a602482015269085c1c995d94dd1c985d60b21b6044820152606401610678565b60a15460405163195580e960e21b81526001600160a01b0383811660048301529091169063655603a490602401600060405180830381600087803b158015610a2057600080fd5b505af1158015610a34573d6000803e3d6000fd5b5050609e5461063692506001600160a01b031690508260016118ec565b60a554600160a01b900460ff16156108d2576097546001600160a01b031633146108d45760405162461bcd60e51b81526004016106789061261a565b610a95611892565b609780546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f309060200161070e565b610aeb611892565b6108d260006119c0565b600080610b00610df8565b610b0a919061266d565b905090565b6033546001600160a01b0316331480610b3257506099546001600160a01b031633145b610b4e5760405162461bcd60e51b8152600401610678906125f8565b609980546001600160a01b0319166001600160a01b0383169081179091556040519081527fefb5cfa1a8690c124332ab93324539c5c9c4be03f28aeb8be86f2d8a0c9fb99b9060200161070e565b6033546001600160a01b0316331480610bbf57506099546001600160a01b031633145b610bdb5760405162461bcd60e51b8152600401610678906125f8565b610be3611a12565b6108d2611a4f565b609c54604051636788231160e11b81523060048201526000916001600160a01b03169063cf104622906024015b602060405180830381865afa158015610c35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a9190612685565b600080610c64611a6d565b90506000610c70611302565b9050670de0b6b3a76400008260400151670de0b6b3a7640000846000015184610c99919061269e565b610ca391906126bd565b610cad919061269e565b610cb791906126bd565b9250505090565b610cc6611892565b609b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f8041329bf7057543a2c2ff4e4071d1d488a31f82ed44e169b5cd2f04f5e3ac859060200161070e565b6033546001600160a01b0316331480610d3757506099546001600160a01b031633145b610d535760405162461bcd60e51b8152600401610678906125f8565b6032811115610d8d5760405162461bcd60e51b8152600401610678906020808252600490820152630216361760e41b604082015260600190565b609d8190556040518181527f3aa4413905e8f015896ec5880bdde24088ccb19b578f9fcf6800354d5320d4af9060200161070e565b610dca6123d2565b6040518060600160405280610ddd611a6d565b815260200160008152602001610df16113f1565b9052919050565b609e546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401610c18565b609a546001600160a01b03163314610e715760405162461bcd60e51b815260206004820152600b60248201526a085cdd1c985d1959da5cdd60aa1b6044820152606401610678565b609a80546001600160a01b0319166001600160a01b0383169081179091556040519081527f46d58e3fa07bf19b1d27240f0e286b27e9f7c1b0d88933333fe833b60eec54129060200161070e565b610ec7611b18565b7f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426610ef0610af5565b6040519081526020015b60405180910390a1565b6033546001600160a01b0316331480610f2757506099546001600160a01b031633145b6108d45760405162461bcd60e51b8152600401610678906125f8565b610f4b611892565b609880546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ca6e64c4522e68e154aa9372f2c5969cd37d9640e59f66953dc472f54ee86fa9060200161070e565b600054610100900460ff1615808015610fb95750600054600160ff909116105b80610fd35750303b158015610fd3575060005460ff166001145b6110365760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610678565b6000805460ff191660011790558015611059576000805461ff0019166101001790555b61106282611b5e565b609e80546001600160a01b038089166001600160a01b031992831617909255609f805488841690831617905560a0805487841690831617905560a1805492861692909116821790556040805163e1c363b760e01b8152905163e1c363b7916004808201926020929091908290030181865afa1580156110e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611109919061263a565b60a280546001600160a01b0319166001600160a01b0392831617905560a15460408051631470f8ed60e21b8152905191909216916351c3e3b49160048083019260209291908290030181865afa158015611167573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118b919061263a565b60a380546001600160a01b0319166001600160a01b0392831617905560a05460408051633e9b6c6f60e21b81529051919092169163fa6db1bc9160048083019260209291908290030181865afa1580156111e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120d919061263a565b60a480546001600160a01b0319166001600160a01b039290921691821790556040805163fbfa77cf60e01b8152905163fbfa77cf916004808201926020929091908290030181865afa158015611267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128b919061263a565b60a580546001600160a01b0319166001600160a01b03929092169190911790556112b36119a1565b80156112fa576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050505050565b60a25460405163402914f560e01b815230600482015260009182916001600160a01b039091169063402914f590602401602060405180830381865afa15801561134f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113739190612685565b60a35460405163402914f560e01b81523060048201529192506000916001600160a01b039091169063402914f590602401602060405180830381865afa1580156113c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e59190612685565b9050610cb7818361266d565b60006113ff60655460ff1690565b61140a5750609d5490565b50600090565b611418611892565b6001600160a01b03811661147d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610678565b610636816119c0565b6097546001600160a01b031633146114b05760405162461bcd60e51b81526004016106789061261a565b60975460408051630edbf57760e31b815281516000936001600160a01b0316926376dfabb892600480820193918290030181865afa1580156114f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151a919061274f565b805160a15460405163ef9aacfd60e01b81526001600160a01b0380841660048301529394509192169063ef9aacfd90602401600060405180830381600087803b15801561156657600080fd5b505af115801561157a573d6000803e3d6000fd5b50505050806001600160a01b031663547eeac16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156115b957600080fd5b505af11580156115cd573d6000803e3d6000fd5b5050609e546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801561161c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116409190612685565b609e5460975460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af1158015611697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bb91906127b7565b50505050565b6116c9611b18565b60a160009054906101000a90046001600160a01b03166001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561171957600080fd5b505af115801561172d573d6000803e3d6000fd5b5050505060a160009054906101000a90046001600160a01b03166001600160a01b031663d294f0936040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561178157600080fd5b505af1158015611795573d6000803e3d6000fd5b5050609f546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156117e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118089190612685565b9050801561188e5761181982611cba565b6000611823610df8565b905061182d611e5e565b600081611838610df8565b61184291906127d4565b4260a6559050337f9bc239f1724cacfb88cb1d66a2dc437467699b68a8c90d7b63110cf4b6f9241082611873610af5565b6040805192835260208301919091520160405180910390a250505b5050565b6033546001600160a01b031633146108d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610678565b6040516001600160a01b03831660248201526044810182905261194f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611f54565b505050565b61195c612026565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610efa565b60a454609f546108d2916001600160a01b03918216911660001961206f565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a1a611b18565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119893390565b60a454609f546108d2916001600160a01b039182169116600061206f565b611aa86040518060c0016040528060008152602001600081526020016000815260200160008152602001606081526020016000151581525090565b609c54604051639af608c960e01b81523060048201526001600160a01b0390911690639af608c990602401600060405180830381865afa158015611af0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b0a91908101906127eb565b60655460ff16156108d25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610678565b600054610100900460ff16611b855760405162461bcd60e51b8152600401610678906128e1565b611b8d612184565b611b956121b3565b611ba26020820182612441565b609780546001600160a01b0319166001600160a01b0392909216919091179055611bd26040820160208301612441565b609880546001600160a01b0319166001600160a01b0392909216919091179055611c026060820160408301612441565b609980546001600160a01b0319166001600160a01b0392909216919091179055611c326080820160608301612441565b609a80546001600160a01b0319166001600160a01b0392909216919091179055611c6260a0820160808301612441565b609b80546001600160a01b0319166001600160a01b0392909216919091179055611c9260c0820160a08301612441565b609c80546001600160a01b0319166001600160a01b039290921691909117905550600a609d55565b6000611cc4611a6d565b8051609f546040516370a0823160e01b8152306004820152929350600092670de0b6b3a764000092916001600160a01b0316906370a0823190602401602060405180830381865afa158015611d1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d419190612685565b611d4b919061269e565b611d5591906126bd565b90506000670de0b6b3a7640000836040015183611d72919061269e565b611d7c91906126bd565b609f54909150611d96906001600160a01b031685836118ec565b6000670de0b6b3a7640000846020015184611db1919061269e565b611dbb91906126bd565b609b54609f54919250611ddb916001600160a01b039081169116836118ec565b6000670de0b6b3a7640000856060015185611df6919061269e565b611e0091906126bd565b609a54609f54919250611e20916001600160a01b039081169116836118ec565b60408051848152602081018490529081018290527fd255b592c7f268a73e534da5219a60ff911b4cf6daae21c7d20527dd657bd99a906060016112f1565b609f546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611ea7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecb9190612685565b60a054609f5460405163364e231160e01b81526001600160a01b039182166004820152602481018490526000604482018190526064820152929350169063364e2311906084016020604051808303816000875af1158015611f30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188e9190612685565b6000611fa9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121e29092919063ffffffff16565b80519091501561194f5780806020019051810190611fc791906127b7565b61194f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610678565b60655460ff166108d25760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610678565b8015806120e95750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156120c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e79190612685565b155b6121545760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610678565b6040516001600160a01b03831660248201526044810182905261194f90849063095ea7b360e01b90606401611918565b600054610100900460ff166121ab5760405162461bcd60e51b8152600401610678906128e1565b6108d26121f9565b600054610100900460ff166121da5760405162461bcd60e51b8152600401610678906128e1565b6108d2612229565b60606121f1848460008561225c565b949350505050565b600054610100900460ff166122205760405162461bcd60e51b8152600401610678906128e1565b6108d2336119c0565b600054610100900460ff166122505760405162461bcd60e51b8152600401610678906128e1565b6065805460ff19169055565b6060824710156122bd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610678565b600080866001600160a01b031685876040516122d9919061292c565b60006040518083038185875af1925050503d8060008114612316576040519150601f19603f3d011682016040523d82523d6000602084013e61231b565b606091505b509150915061232c87838387612337565b979650505050505050565b606083156123a357825161239c576001600160a01b0385163b61239c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610678565b50816121f1565b6121f183838151156123b85781518083602001fd5b8060405162461bcd60e51b81526004016106789190612948565b60405180606001604052806124186040518060c0016040528060008152602001600081526020016000815260200160008152602001606081526020016000151581525090565b815260200160008152602001600081525090565b6001600160a01b038116811461063657600080fd5b60006020828403121561245357600080fd5b813561245e8161242c565b9392505050565b801515811461063657600080fd5b60006020828403121561248557600080fd5b813561245e81612465565b6000602082840312156124a257600080fd5b5035919050565b60005b838110156124c45781810151838201526020016124ac565b838111156116bb5750506000910152565b600081518084526124ed8160208601602086016124a9565b601f01601f19169290920160200192915050565b60208152600082516060602084015280516080840152602081015160a0840152604081015160c0840152606081015160e0840152608081015160c06101008501526125506101408501826124d5565b905060a082015115156101208501526020850151604085015260408501516060850152809250505092915050565b600080600080600085870361014081121561259857600080fd5b86356125a38161242c565b955060208701356125b38161242c565b945060408701356125c38161242c565b935060608701356125d38161242c565b925060c0607f19820112156125e757600080fd5b506080860190509295509295909350565b60208082526008908201526710b6b0b730b3b2b960c11b604082015260600190565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b60006020828403121561264c57600080fd5b815161245e8161242c565b634e487b7160e01b600052601160045260246000fd5b6000821982111561268057612680612657565b500190565b60006020828403121561269757600080fd5b5051919050565b60008160001904831182151516156126b8576126b8612657565b500290565b6000826126da57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612718576127186126df565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612747576127476126df565b604052919050565b60006040828403121561276157600080fd5b6040516040810181811067ffffffffffffffff82111715612784576127846126df565b60405282516127928161242c565b81526020928301519281019290925250919050565b80516127b281612465565b919050565b6000602082840312156127c957600080fd5b815161245e81612465565b6000828210156127e6576127e6612657565b500390565b600060208083850312156127fe57600080fd5b825167ffffffffffffffff8082111561281657600080fd5b9084019060c0828703121561282a57600080fd5b6128326126f5565b825181528383015184820152604083015160408201526060830151606082015260808301518281111561286457600080fd5b8301601f8101881361287557600080fd5b805183811115612887576128876126df565b612899601f8201601f1916870161271e565b935080845288868284010111156128af57600080fd5b6128be818786018885016124a9565b50508160808201526128d260a084016127a7565b60a08201529695505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161293e8184602087016124a9565b9190910192915050565b60208152600061245e60208301846124d556fea2646970667358221220f2950d27e2380bb69ed8efb7f18aebc797a3a50c1a6a2252ef4196e0bf697d3764736f6c634300080c0033";

type StrategyGLPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyGLPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyGLP__factory extends ContractFactory {
  constructor(...args: StrategyGLPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StrategyGLP> {
    return super.deploy(overrides || {}) as Promise<StrategyGLP>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StrategyGLP {
    return super.attach(address) as StrategyGLP;
  }
  override connect(signer: Signer): StrategyGLP__factory {
    return super.connect(signer) as StrategyGLP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyGLPInterface {
    return new utils.Interface(_abi) as StrategyGLPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyGLP {
    return new Contract(address, _abi, signerOrProvider) as StrategyGLP;
  }
}
