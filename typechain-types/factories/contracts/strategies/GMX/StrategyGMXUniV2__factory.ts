/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StrategyGMXUniV2,
  StrategyGMXUniV2Interface,
  StrategyManager,
} from "../../../../contracts/strategies/GMX/StrategyGMXUniV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_chef",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_nativeToWantRoute",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "unirouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct StrategyManager.CommonAddresses",
        name: "_commonAddresses",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChargedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SetOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "unirouter",
        type: "address",
      },
    ],
    name: "SetUnirouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "SetVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "harvester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantTokenHarvested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "StratHarvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceTracker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasprice",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestOnDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "native",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToWant",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nativeToWantRoute",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retireStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardStorage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_harvestOnDeposit",
        type: "bool",
      },
    ],
    name: "setHarvestOnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldGasThrottle",
        type: "bool",
      },
    ],
    name: "setShouldGasThrottle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unirouter",
        type: "address",
      },
    ],
    name: "setUnirouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldGasThrottle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unirouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wantToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670429d069189e0000600355600480546001600160a81b03191674a43509661141f254f54d9a326e8ec851a0b95307011790553480156200004457600080fd5b506040516200290838038062002908833981016040819052620000679162000966565b8281806200007533620002ae565b6000805460ff60a01b191690558051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549190931691161790556040810151620000c590620002fe565b50600780546001600160a01b0319166001600160a01b03841690811790915560408051631470f8ed60e21b815290516351c3e3b4916004808201926020929091908290030181865afa15801562000120573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000146919062000a49565b600880546001600160a01b0319166001600160a01b039283161790556007546040805163067200c560e11b815290519190921691630ce4018a9160048083019260209291908290030181865afa158015620001a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001cb919062000a49565b600960006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050508160008151811062000209576200020962000a6e565b6020026020010151600560006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816001835162000248919062000a84565b815181106200025b576200025b62000a6e565b602090810291909101810151600680546001600160a01b0319166001600160a01b0390921691909117905582516200029a91600b919085019062000807565b50620002a562000381565b50505062000b6e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000308620003dd565b6001600160a01b038116620003735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6200037e81620002ae565b50565b600954600654620003ae916001600160a01b03918216911660001962000439602090811b62000f8b17901c565b600254600554620003db916001600160a01b03918216911660001962000439602090811b62000f8b17901c565b565b6000546001600160a01b03163314620003db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200036a565b801580620004b75750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156200048f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b5919062000aaa565b155b6200052b5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016200036a565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620005839185916200058816565b505050565b6000620005e4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200066660201b620010d8179092919060201c565b80519091501562000583578080602001905181019062000605919062000ac4565b620005835760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200036a565b60606200067784846000856200067f565b949350505050565b606082471015620006e25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200036a565b600080866001600160a01b0316858760405162000700919062000b1b565b60006040518083038185875af1925050503d80600081146200073f576040519150601f19603f3d011682016040523d82523d6000602084013e62000744565b606091505b509092509050620007588783838762000763565b979650505050505050565b60608315620007d4578251620007cc576001600160a01b0385163b620007cc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200036a565b508162000677565b620006778383815115620007eb5781518083602001fd5b8060405162461bcd60e51b81526004016200036a919062000b39565b8280548282559060005260206000209081019282156200085f579160200282015b828111156200085f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000828565b506200086d92915062000871565b5090565b5b808211156200086d576000815560010162000872565b80516001600160a01b0381168114620008a057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620008e657620008e6620008a5565b604052919050565b6000606082840312156200090157600080fd5b604051606081016001600160401b0381118282101715620009265762000926620008a5565b604052905080620009378362000888565b8152620009476020840162000888565b60208201526200095a6040840162000888565b60408201525092915050565b600080600060a084860312156200097c57600080fd5b620009878462000888565b602085810151919450906001600160401b0380821115620009a757600080fd5b818701915087601f830112620009bc57600080fd5b815181811115620009d157620009d1620008a5565b8060051b9150620009e4848301620008bb565b818152918301840191848101908a841115620009ff57600080fd5b938501935b8385101562000a285762000a188562000888565b8252938501939085019062000a04565b80975050505050505062000a408560408601620008ee565b90509250925092565b60006020828403121562000a5c57600080fd5b62000a678262000888565b9392505050565b634e487b7160e01b600052603260045260246000fd5b60008282101562000aa557634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121562000abd57600080fd5b5051919050565b60006020828403121562000ad757600080fd5b8151801515811462000a6757600080fd5b60005b8381101562000b0557818101518382015260200162000aeb565b8381111562000b15576000848401525b50505050565b6000825162000b2f81846020870162000ae8565b9190910192915050565b602081526000825180602084015262000b5a81604085016020870162000ae8565b601f01601f19169190910160400192915050565b611d8a8062000b7e6000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063722713f711610125578063d92f3d73116100ad578063f2fde38b1161007c578063f2fde38b1461040a578063fad4675e1461041d578063fb61778714610430578063fbfa77cf14610438578063fde717f61461044b57600080fd5b8063d92f3d73146103d1578063deebc062146103e4578063e7a7250a146103f9578063f1a392da1461040157600080fd5b806397fd323d116100f457806397fd323d1461039a5780639f8b5da1146103a1578063c1a3d44c146103ae578063d0e30db0146103b6578063d23e0480146103be57600080fd5b8063722713f7146103655780638456cb591461036d5780638912cb8b146103755780638da5cb5b1461038957600080fd5b80634641257d116101a85780635854c128116101775780635854c128146103015780635c975abb146103145780636817031b146103325780636ec232d314610345578063715018a61461035d57600080fd5b80634641257d146102e15780634700d305146102e9578063547eeac1146102f1578063573fef0a146102f957600080fd5b80631f1fcd51116101ef5780631f1fcd511461028f5780631fc8bc5d146102a0578063257ae0de146102b35780632e1a7d4d146102c65780633f4ba83a146102d957600080fd5b80630e8fbb5a14610221578063115880861461023657806311b0b42d14610251578063191390921461027c575b600080fd5b61023461022f366004611969565b61045e565b005b61023e610484565b6040519081526020015b60405180910390f35b600554610264906001600160a01b031681565b6040516001600160a01b039091168152602001610248565b600954610264906001600160a01b031681565b6006546001600160a01b0316610264565b600754610264906001600160a01b031681565b600254610264906001600160a01b031681565b6102346102d436600461198d565b610505565b6102346106ef565b610234610711565b6102346107fb565b610234610876565b61023461098d565b61026461030f36600461198d565b6109c9565b600054600160a01b900460ff165b6040519015158152602001610248565b6102346103403660046119bb565b6109f3565b6004546102649061010090046001600160a01b031681565b610234610a50565b61023e610a62565b610234610a7e565b60095461032290600160a01b900460ff1681565b6000546001600160a01b0316610264565b600061023e565b6004546103229060ff1681565b61023e610a96565b610234610ac7565b600654610264906001600160a01b031681565b6102346103df3660046119bb565b610bdc565b6103ec610c32565b60405161024891906119d8565b61023e610c94565b61023e600a5481565b6102346104183660046119bb565b610cc5565b61023461042b366004611969565b610d3b565b610234610d56565b600154610264906001600160a01b031681565b600854610264906001600160a01b031681565b6104666110ef565b60098054911515600160a01b0260ff60a01b19909216919091179055565b600954600654604051637aeceb1f60e11b81523060048201526001600160a01b039182166024820152600092919091169063f5d9d63e906044015b602060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190611a25565b905090565b6001546001600160a01b031633146105385760405162461bcd60e51b815260040161052f90611a3e565b60405180910390fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a59190611a25565b905081811015610689576007546001600160a01b031663078580d26105ca8385611a74565b6040518263ffffffff1660e01b81526004016105e891815260200190565b600060405180830381600087803b15801561060257600080fd5b505af1158015610616573d6000803e3d6000fd5b50506006546040516370a0823160e01b81523060048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190611a25565b90505b818111156106945750805b6001546006546106b1916001600160a01b03918216911683611149565b7f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d6106da610a62565b60405190815260200160405180910390a15050565b6106f76110ef565b6106ff611179565b6107076111ce565b61070f610ac7565b565b60045460ff168015610733575060045461010090046001600160a01b03163b15155b156107f357600460019054906101000a90046001600160a01b03166001600160a01b0316633de39c116040518163ffffffff1660e01b81526004016020604051808303816000875af115801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b19190611a25565b3a11156107f35760405162461bcd60e51b815260206004820152601060248201526f67617320697320746f6f20686967682160801b604482015260640161052f565b61070f61120c565b6108036110ef565b61080b610a7e565b6007546001600160a01b031663078580d2610824610484565b6040518263ffffffff1660e01b815260040161084291815260200190565b600060405180830381600087803b15801561085c57600080fd5b505af1158015610870573d6000803e3d6000fd5b50505050565b60015460408051635463173b60e11b815290516000926001600160a01b03169163a8c62e769160048083019260209291908290030181865afa1580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e49190611a8b565b9050336001600160a01b0382161461092b5760405162461bcd60e51b815260206004820152600a602482015269085c1c995d94dd1c985d60b21b604482015260640161052f565b60075460405163195580e960e21b81526001600160a01b0383811660048301529091169063655603a490602401600060405180830381600087803b15801561097257600080fd5b505af1158015610986573d6000803e3d6000fd5b5050505050565b600954600160a01b900460ff161561070f576001546001600160a01b031633146107f35760405162461bcd60e51b815260040161052f90611a3e565b600b81815481106109d957600080fd5b6000918252602090912001546001600160a01b0316905081565b6109fb6110ef565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b610a586110ef565b61070f60006113bf565b6000610a6c610484565b610a74610a96565b6105009190611aa8565b610a866110ef565b610a8e61140f565b61070f611452565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016104bf565b610acf61148e565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c9190611a25565b90508015610bd957600754604051633cf6bab360e21b8152600481018390526001600160a01b039091169063f3daeacc90602401600060405180830381600087803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b505050507f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426610bcb610a62565b604051908152602001610a45565b50565b610be46110ef565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ca6e64c4522e68e154aa9372f2c5969cd37d9640e59f66953dc472f54ee86fa90602001610a45565b6060600b805480602002602001604051908101604052809291908181526020018280548015610c8a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c6c575b5050505050905090565b60085460405163402914f560e01b81523060048201526000916001600160a01b03169063402914f5906024016104bf565b610ccd6110ef565b6001600160a01b038116610d325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052f565b610bd9816113bf565b610d436110ef565b6004805460ff1916911515919091179055565b6001546001600160a01b03163314610d805760405162461bcd60e51b815260040161052f90611a3e565b60015460408051630edbf57760e31b815281516000936001600160a01b0316926376dfabb892600480820193918290030181865afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea9190611b07565b805160075460405163ef9aacfd60e01b81526001600160a01b0380841660048301529394509192169063ef9aacfd90602401600060405180830381600087803b158015610e3657600080fd5b505af1158015610e4a573d6000803e3d6000fd5b50505050806001600160a01b031663547eeac16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e8957600080fd5b505af1158015610e9d573d6000803e3d6000fd5b50506006546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015610eec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f109190611a25565b60065460015460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af1158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190611b5f565b8015806110055750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610fdf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110039190611a25565b155b6110705760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161052f565b6040516001600160a01b0383166024820152604481018290526110d390849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526114db565b505050565b60606110e784846000856115ad565b949350505050565b6000546001600160a01b0316331461070f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052f565b6040516001600160a01b0383166024820152604481018290526110d390849063a9059cbb60e01b9060640161109c565b611181611688565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6009546006546111ed916001600160a01b039182169116600019610f8b565b60025460055461070f916001600160a01b039182169116600019610f8b565b61121461148e565b600760009054906101000a90046001600160a01b03166001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561126457600080fd5b505af1158015611278573d6000803e3d6000fd5b5050600854604051630f41a04d60e11b81523060048201526001600160a01b039091169250631e83409a9150602401600060405180830381600087803b1580156112c157600080fd5b505af11580156112d5573d6000803e3d6000fd5b50506005546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015611324573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113489190611a25565b90508015610bd9576113586116d8565b6113606117cd565b600061136a610a96565b9050611374610ac7565b42600a55337f9bc239f1724cacfb88cb1d66a2dc437467699b68a8c90d7b63110cf4b6f92410826113a3610a62565b6040805192835260208301919091520160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61141761148e565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111b13390565b600954600654611470916001600160a01b0391821691166000610f8b565b60025460055461070f916001600160a01b0391821691166000610f8b565b600054600160a01b900460ff161561070f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161052f565b6000611530826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110d89092919063ffffffff16565b8051909150156110d3578080602001905181019061154e9190611b5f565b6110d35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161052f565b60608247101561160e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161052f565b600080866001600160a01b0316858760405161162a9190611ba8565b60006040518083038185875af1925050503d8060008114611667576040519150601f19603f3d011682016040523d82523d6000602084013e61166c565b606091505b509150915061167d878383876118c0565b979650505050505050565b600054600160a01b900460ff1661070f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161052f565b6003546005546040516370a0823160e01b8152306004820152600092670de0b6b3a76400009290916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117569190611a25565b6117609190611bc4565b61176a9190611be3565b90506117946117816000546001600160a01b031690565b6005546001600160a01b03169083611149565b60035460408051918252602082018390527f7b28cbe16017943a65fcc059a53072c1b23b17da20571041d0555074ec88c4349101610a45565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183a9190611a25565b6002546040516338ed173960e01b81529192506001600160a01b0316906338ed173990611875908490600090600b9030904290600401611c05565b6000604051808303816000875af1158015611894573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526118bc9190810190611c7b565b5050565b6060831561192c578251611925576001600160a01b0385163b6119255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161052f565b50816110e7565b6110e783838151156119415781518083602001fd5b8060405162461bcd60e51b815260040161052f9190611d21565b8015158114610bd957600080fd5b60006020828403121561197b57600080fd5b81356119868161195b565b9392505050565b60006020828403121561199f57600080fd5b5035919050565b6001600160a01b0381168114610bd957600080fd5b6000602082840312156119cd57600080fd5b8135611986816119a6565b6020808252825182820181905260009190848201906040850190845b81811015611a195783516001600160a01b0316835292840192918401916001016119f4565b50909695505050505050565b600060208284031215611a3757600080fd5b5051919050565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611a8657611a86611a5e565b500390565b600060208284031215611a9d57600080fd5b8151611986816119a6565b60008219821115611abb57611abb611a5e565b500190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611aff57611aff611ac0565b604052919050565b600060408284031215611b1957600080fd5b6040516040810181811067ffffffffffffffff82111715611b3c57611b3c611ac0565b6040528251611b4a816119a6565b81526020928301519281019290925250919050565b600060208284031215611b7157600080fd5b81516119868161195b565b60005b83811015611b97578181015183820152602001611b7f565b838111156108705750506000910152565b60008251611bba818460208701611b7c565b9190910192915050565b6000816000190483118215151615611bde57611bde611a5e565b500290565b600082611c0057634e487b7160e01b600052601260045260246000fd5b500490565b600060a082018783526020878185015260a0604085015281875480845260c0860191508860005282600020935060005b81811015611c5a5784546001600160a01b031683526001948501949284019201611c35565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020808385031215611c8e57600080fd5b825167ffffffffffffffff80821115611ca657600080fd5b818501915085601f830112611cba57600080fd5b815181811115611ccc57611ccc611ac0565b8060051b9150611cdd848301611ad6565b8181529183018401918481019088841115611cf757600080fd5b938501935b83851015611d1557845182529385019390850190611cfc565b98975050505050505050565b6020815260008251806020840152611d40816040850160208701611b7c565b601f01601f1916919091016040019291505056fea264697066735822122053f7b5fd58f09a6e6c252f4d3209f43d32e2bb906ff2e154308049b29b5d3d7f64736f6c634300080c0033";

type StrategyGMXUniV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyGMXUniV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyGMXUniV2__factory extends ContractFactory {
  constructor(...args: StrategyGMXUniV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _chef: PromiseOrValue<string>,
    _nativeToWantRoute: PromiseOrValue<string>[],
    _commonAddresses: StrategyManager.CommonAddressesStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StrategyGMXUniV2> {
    return super.deploy(
      _chef,
      _nativeToWantRoute,
      _commonAddresses,
      overrides || {}
    ) as Promise<StrategyGMXUniV2>;
  }
  override getDeployTransaction(
    _chef: PromiseOrValue<string>,
    _nativeToWantRoute: PromiseOrValue<string>[],
    _commonAddresses: StrategyManager.CommonAddressesStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _chef,
      _nativeToWantRoute,
      _commonAddresses,
      overrides || {}
    );
  }
  override attach(address: string): StrategyGMXUniV2 {
    return super.attach(address) as StrategyGMXUniV2;
  }
  override connect(signer: Signer): StrategyGMXUniV2__factory {
    return super.connect(signer) as StrategyGMXUniV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyGMXUniV2Interface {
    return new utils.Interface(_abi) as StrategyGMXUniV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyGMXUniV2 {
    return new Contract(address, _abi, signerOrProvider) as StrategyGMXUniV2;
  }
}
