/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StrategyGMX,
  StrategyGMXInterface,
  StrategyManager,
} from "../../../../contracts/strategies/GMX/StrategyGMX";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_chef",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "unirouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct StrategyManager.CommonAddresses",
        name: "_commonAddresses",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChargedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SetOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "unirouter",
        type: "address",
      },
    ],
    name: "SetUnirouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "SetVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "harvester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantTokenHarvested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "StratHarvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceTracker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chef",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasprice",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestOnDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "native",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToWant",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retireStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardStorage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_harvestOnDeposit",
        type: "bool",
      },
    ],
    name: "setHarvestOnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldGasThrottle",
        type: "bool",
      },
    ],
    name: "setShouldGasThrottle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unirouter",
        type: "address",
      },
    ],
    name: "setUnirouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldGasThrottle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unirouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wantToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670429d069189e0000600355600480546001600160a81b03191674a43509661141f254f54d9a326e8ec851a0b95307011790553480156200004457600080fd5b506040516200201038038062002010833981016040819052620000679162000340565b806200007333620001f2565b6000805460ff60a01b191690558051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549190931691161790556040810151620000c39062000242565b50600780546001600160a01b0319166001600160a01b03841690811790915560408051631470f8ed60e21b815290516351c3e3b4916004808201926020929091908290030181865afa1580156200011e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001449190620003eb565b600880546001600160a01b0319166001600160a01b039283161790556007546040805163067200c560e11b815290519190921691630ce4018a9160048083019260209291908290030181865afa158015620001a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c99190620003eb565b600980546001600160a01b0319166001600160a01b039290921691909117905550620004109050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200024c620002c5565b6001600160a01b038116620002b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620002c281620001f2565b50565b6000546001600160a01b03163314620003215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002ae565b565b80516001600160a01b03811681146200033b57600080fd5b919050565b60008082840360808112156200035557600080fd5b620003608462000323565b92506060601f19820112156200037557600080fd5b50604051606081016001600160401b0381118282101715620003a757634e487b7160e01b600052604160045260246000fd5b604052620003b86020850162000323565b8152620003c86040850162000323565b6020820152620003db6060850162000323565b6040820152809150509250929050565b600060208284031215620003fe57600080fd5b620004098262000323565b9392505050565b611bf080620004206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063722713f711610125578063d92f3d73116100ad578063f2fde38b1161007c578063f2fde38b146103e6578063fad4675e146103f9578063fb6177871461040c578063fbfa77cf14610414578063fde717f61461042757600080fd5b8063d92f3d73146103b3578063deebc062146103c6578063e7a7250a146103d5578063f1a392da146103dd57600080fd5b806397fd323d116100f457806397fd323d1461037c5780639f8b5da114610383578063c1a3d44c14610390578063d0e30db014610398578063d23e0480146103a057600080fd5b8063722713f7146103475780638456cb591461034f5780638912cb8b146103575780638da5cb5b1461036b57600080fd5b80633f4ba83a116101a8578063573fef0a11610177578063573fef0a146102ee5780635c975abb146102f65780636817031b146103145780636ec232d314610327578063715018a61461033f57600080fd5b80633f4ba83a146102ce5780634641257d146102d65780634700d305146102de578063547eeac1146102e657600080fd5b80631f1fcd51116101e45780631f1fcd51146102845780631fc8bc5d14610295578063257ae0de146102a85780632e1a7d4d146102bb57600080fd5b80630e8fbb5a14610216578063115880861461022b57806311b0b42d146102465780631913909214610271575b600080fd5b610229610224366004611924565b61043a565b005b610233610460565b6040519081526020015b60405180910390f35b600554610259906001600160a01b031681565b6040516001600160a01b03909116815260200161023d565b600954610259906001600160a01b031681565b6006546001600160a01b0316610259565b600754610259906001600160a01b031681565b600254610259906001600160a01b031681565b6102296102c9366004611948565b6104e1565b6102296106cb565b6102296106ed565b6102296107d7565b610229610852565b610229610969565b600054600160a01b900460ff165b604051901515815260200161023d565b610229610322366004611976565b6109a5565b6004546102599061010090046001600160a01b031681565b610229610a02565b610233610a14565b610229610a30565b60095461030490600160a01b900460ff1681565b6000546001600160a01b0316610259565b6000610233565b6004546103049060ff1681565b610233610a48565b610229610a79565b600654610259906001600160a01b031681565b6102296103c1366004611976565b610b8e565b606060405161023d9190611993565b610233610be4565b610233600a5481565b6102296103f4366004611976565b610c15565b610229610407366004611924565b610c8b565b610229610ca6565b600154610259906001600160a01b031681565b600854610259906001600160a01b031681565b610442610edb565b60098054911515600160a01b0260ff60a01b19909216919091179055565b600954600654604051637aeceb1f60e11b81523060048201526001600160a01b039182166024820152600092919091169063f5d9d63e906044015b602060405180830381865afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc91906119e0565b905090565b6001546001600160a01b031633146105145760405162461bcd60e51b815260040161050b906119f9565b60405180910390fd5b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561055d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058191906119e0565b905081811015610665576007546001600160a01b031663078580d26105a68385611a2f565b6040518263ffffffff1660e01b81526004016105c491815260200190565b600060405180830381600087803b1580156105de57600080fd5b505af11580156105f2573d6000803e3d6000fd5b50506006546040516370a0823160e01b81523060048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066291906119e0565b90505b818111156106705750805b60015460065461068d916001600160a01b03918216911683610f35565b7f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d6106b6610a14565b60405190815260200160405180910390a15050565b6106d3610edb565b6106db610f9d565b6106e3610ff2565b6106eb610a79565b565b60045460ff16801561070f575060045461010090046001600160a01b03163b15155b156107cf57600460019054906101000a90046001600160a01b03166001600160a01b0316633de39c116040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906119e0565b3a11156107cf5760405162461bcd60e51b815260206004820152601060248201526f67617320697320746f6f20686967682160801b604482015260640161050b565b6106eb611030565b6107df610edb565b6107e7610a30565b6007546001600160a01b031663078580d2610800610460565b6040518263ffffffff1660e01b815260040161081e91815260200190565b600060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b50505050565b60015460408051635463173b60e11b815290516000926001600160a01b03169163a8c62e769160048083019260209291908290030181865afa15801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190611a46565b9050336001600160a01b038216146109075760405162461bcd60e51b815260206004820152600a602482015269085c1c995d94dd1c985d60b21b604482015260640161050b565b60075460405163195580e960e21b81526001600160a01b0383811660048301529091169063655603a490602401600060405180830381600087803b15801561094e57600080fd5b505af1158015610962573d6000803e3d6000fd5b5050505050565b600954600160a01b900460ff16156106eb576001546001600160a01b031633146107cf5760405162461bcd60e51b815260040161050b906119f9565b6109ad610edb565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b610a0a610edb565b6106eb60006111e3565b6000610a1e610460565b610a26610a48565b6104dc9190611a63565b610a38610edb565b610a40611233565b6106eb611276565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240161049b565b610a816112b2565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aee91906119e0565b90508015610b8b57600754604051633cf6bab360e21b8152600481018390526001600160a01b039091169063f3daeacc90602401600060405180830381600087803b158015610b3c57600080fd5b505af1158015610b50573d6000803e3d6000fd5b505050507f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426610b7d610a14565b6040519081526020016109f7565b50565b610b96610edb565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ca6e64c4522e68e154aa9372f2c5969cd37d9640e59f66953dc472f54ee86fa906020016109f7565b60085460405163402914f560e01b81523060048201526000916001600160a01b03169063402914f59060240161049b565b610c1d610edb565b6001600160a01b038116610c825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050b565b610b8b816111e3565b610c93610edb565b6004805460ff1916911515919091179055565b6001546001600160a01b03163314610cd05760405162461bcd60e51b815260040161050b906119f9565b60015460408051630edbf57760e31b815281516000936001600160a01b0316926376dfabb892600480820193918290030181865afa158015610d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3a9190611a7b565b805160075460405163ef9aacfd60e01b81526001600160a01b0380841660048301529394509192169063ef9aacfd90602401600060405180830381600087803b158015610d8657600080fd5b505af1158015610d9a573d6000803e3d6000fd5b50505050806001600160a01b031663547eeac16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610dd957600080fd5b505af1158015610ded573d6000803e3d6000fd5b50506006546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015610e3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6091906119e0565b60065460015460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044016020604051808303816000875af1158015610eb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190611ae1565b6000546001600160a01b031633146106eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050b565b6040516001600160a01b038316602482015260448101829052610f9890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112ff565b505050565b610fa56113d1565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600954600654611011916001600160a01b039182169116600019611421565b6002546005546106eb916001600160a01b039182169116600019611421565b6110386112b2565b600760009054906101000a90046001600160a01b03166001600160a01b031663f69e20466040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561108857600080fd5b505af115801561109c573d6000803e3d6000fd5b5050600854604051630f41a04d60e11b81523060048201526001600160a01b039091169250631e83409a9150602401600060405180830381600087803b1580156110e557600080fd5b505af11580156110f9573d6000803e3d6000fd5b50506005546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c91906119e0565b90508015610b8b5761117c611536565b61118461162b565b600061118e610a48565b9050611198610a79565b42600a55337f9bc239f1724cacfb88cb1d66a2dc437467699b68a8c90d7b63110cf4b6f92410826111c7610a14565b6040805192835260208301919091520160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61123b6112b2565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fd53390565b600954600654611294916001600160a01b0391821691166000611421565b6002546005546106eb916001600160a01b0391821691166000611421565b600054600160a01b900460ff16156106eb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161050b565b6000611354826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117899092919063ffffffff16565b805190915015610f9857808060200190518101906113729190611ae1565b610f985760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161050b565b600054600160a01b900460ff166106eb5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161050b565b80158061149b5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611475573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149991906119e0565b155b6115065760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161050b565b6040516001600160a01b038316602482015260448101829052610f9890849063095ea7b360e01b90606401610f61565b6003546005546040516370a0823160e01b8152306004820152600092670de0b6b3a76400009290916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b491906119e0565b6115be9190611afe565b6115c89190611b1d565b90506115f26115df6000546001600160a01b031690565b6005546001600160a01b03169083610f35565b60035460408051918252602082018390527f7b28cbe16017943a65fcc059a53072c1b23b17da20571041d0555074ec88c43491016109f7565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611674573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169891906119e0565b90508015610b8b576040805160e0810182526005546001600160a01b039081168252600654811660208301908152610bb8838501908152306060850190815260808501878152600060a0870181815260c0880191825260025498516304e45aaf60e01b8152885188166004820152955187166024870152935162ffffff166044860152915185166064850152516084840152905160a483015251821660c4820152919216906304e45aaf9060e4016020604051808303816000875af1158015611765573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9891906119e0565b606061179884846000856117a0565b949350505050565b6060824710156118015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161050b565b600080866001600160a01b0316858760405161181d9190611b6b565b60006040518083038185875af1925050503d806000811461185a576040519150601f19603f3d011682016040523d82523d6000602084013e61185f565b606091505b50915091506118708783838761187b565b979650505050505050565b606083156118e75782516118e0576001600160a01b0385163b6118e05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161050b565b5081611798565b61179883838151156118fc5781518083602001fd5b8060405162461bcd60e51b815260040161050b9190611b87565b8015158114610b8b57600080fd5b60006020828403121561193657600080fd5b813561194181611916565b9392505050565b60006020828403121561195a57600080fd5b5035919050565b6001600160a01b0381168114610b8b57600080fd5b60006020828403121561198857600080fd5b813561194181611961565b6020808252825182820181905260009190848201906040850190845b818110156119d45783516001600160a01b0316835292840192918401916001016119af565b50909695505050505050565b6000602082840312156119f257600080fd5b5051919050565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611a4157611a41611a19565b500390565b600060208284031215611a5857600080fd5b815161194181611961565b60008219821115611a7657611a76611a19565b500190565b600060408284031215611a8d57600080fd5b6040516040810181811067ffffffffffffffff82111715611abe57634e487b7160e01b600052604160045260246000fd5b6040528251611acc81611961565b81526020928301519281019290925250919050565b600060208284031215611af357600080fd5b815161194181611916565b6000816000190483118215151615611b1857611b18611a19565b500290565b600082611b3a57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015611b5a578181015183820152602001611b42565b8381111561084c5750506000910152565b60008251611b7d818460208701611b3f565b9190910192915050565b6020815260008251806020840152611ba6816040850160208701611b3f565b601f01601f1916919091016040019291505056fea26469706673582212207122133f1a97f9992beaf0fea31508bdd2f8981c30a5dd59dfa045a393c80fea64736f6c634300080c0033";

type StrategyGMXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyGMXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyGMX__factory extends ContractFactory {
  constructor(...args: StrategyGMXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _chef: PromiseOrValue<string>,
    _commonAddresses: StrategyManager.CommonAddressesStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StrategyGMX> {
    return super.deploy(
      _chef,
      _commonAddresses,
      overrides || {}
    ) as Promise<StrategyGMX>;
  }
  override getDeployTransaction(
    _chef: PromiseOrValue<string>,
    _commonAddresses: StrategyManager.CommonAddressesStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_chef, _commonAddresses, overrides || {});
  }
  override attach(address: string): StrategyGMX {
    return super.attach(address) as StrategyGMX;
  }
  override connect(signer: Signer): StrategyGMX__factory {
    return super.connect(signer) as StrategyGMX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyGMXInterface {
    return new utils.Interface(_abi) as StrategyGMXInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyGMX {
    return new Contract(address, _abi, signerOrProvider) as StrategyGMX;
  }
}
