/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  CapSingleStakeStrategy,
  CapSingleStakeStrategyInterface,
} from "../../../../../contracts/strategies/Cap/CapUsdcPoolStrategy.sol/CapSingleStakeStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChargedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "harvester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantTokenHarvested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "StratHarvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasprice",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDevFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestOnDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retireStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setDevFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_harvestOnDeposit",
        type: "bool",
      },
    ],
    name: "setHarvestOnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolTokenAddress",
        type: "address",
      },
    ],
    name: "setProtocolTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldGasThrottle",
        type: "bool",
      },
    ],
    name: "setShouldGasThrottle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setStakingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldGasThrottle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff60a81b1916600160a81b178155600180546001600160a01b03191673a43509661141f254f54d9a326e8ec851a0b95307179055670429d069189e00006007556008553480156200005957600080fd5b5060405162001fcd38038062001fcd8339810160408190526200007c9162000560565b6200008733620000f2565b6000805460ff60a01b19169055600480546001600160a01b038087166001600160a01b03199283161790925560038054868416908316179055600580548584169083161790556002805492841692909116919091179055620000e862000142565b5050505062000688565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6003546002546200016f916001600160a01b03918216911660001962000171602090811b62000be817901c565b565b801580620001ef5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015620001c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ed9190620005bd565b155b620002675760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002bf918591620002c416565b505050565b600062000320826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620003a260201b62000d35179092919060201c565b805190915015620002bf5780806020019051810190620003419190620005d7565b620002bf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200025e565b6060620003b38484600085620003bb565b949350505050565b6060824710156200041e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200025e565b600080866001600160a01b031685876040516200043c919062000635565b60006040518083038185875af1925050503d80600081146200047b576040519150601f19603f3d011682016040523d82523d6000602084013e62000480565b606091505b50909250905062000494878383876200049f565b979650505050505050565b606083156200051057825162000508576001600160a01b0385163b620005085760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200025e565b5081620003b3565b620003b38383815115620005275781518083602001fd5b8060405162461bcd60e51b81526004016200025e919062000653565b80516001600160a01b03811681146200055b57600080fd5b919050565b600080600080608085870312156200057757600080fd5b620005828562000543565b9350620005926020860162000543565b9250620005a26040860162000543565b9150620005b26060860162000543565b905092959194509250565b600060208284031215620005d057600080fd5b5051919050565b600060208284031215620005ea57600080fd5b81518015158114620005fb57600080fd5b9392505050565b60005b838110156200061f57818101518382015260200162000605565b838111156200062f576000848401525b50505050565b600082516200064981846020870162000602565b9190910192915050565b60208152600082518060208401526200067481604085016020870162000602565b601f01601f19169190910160400192915050565b61193580620006986000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638456cb591161011a578063e3ff9370116100ad578063f706b1f21161007c578063f706b1f2146103aa578063fad4675e146103bd578063fb617787146103d0578063fbfa77cf146103d8578063fc0c546a146103eb57600080fd5b8063e3ff937014610373578063e7a7250a14610386578063f1a392da1461038e578063f2fde38b1461039757600080fd5b80639f8b5da1116100e95780639f8b5da114610347578063c1a3d44c1461035b578063c7287e9d14610363578063d0e30db01461036b57600080fd5b80638456cb591461030e5780638912cb8b146103165780638da5cb5b146103235780639ec5a8941461033457600080fd5b80634641257d116101925780635c975abb116101615780635c975abb146102cd5780636ec232d3146102eb578063715018a6146102fe578063722713f71461030657600080fd5b80634641257d146102ad5780634700d305146102b55780634b270a46146102bd578063573fef0a146102c557600080fd5b80631f1fcd51116101ce5780631f1fcd511461026e5780632e1a7d4d1461027f5780633f4ba83a14610292578063410dbf7e1461029a57600080fd5b80630e8fbb5a14610200578063115880861461021557806316f0115b146102305780631c75b6b21461025b575b600080fd5b61021361020e3660046116d3565b6103fe565b005b61021d610419565b6040519081526020015b60405180910390f35b600354610243906001600160a01b031681565b6040516001600160a01b039091168152602001610227565b6102136102693660046116f7565b61048c565b6002546001600160a01b0316610243565b61021361028d3660046116f7565b6104f2565b6102136104fe565b6102136102a83660046116f7565b610520565b610213610581565b61021361066d565b60085461021d565b610213610752565b600054600160a01b900460ff165b6040519015158152602001610227565b600154610243906001600160a01b031681565b610213610787565b61021d610799565b6102136107b5565b6009546102db9060ff1681565b6000546001600160a01b0316610243565b600554610243906001600160a01b031681565b6000546102db90600160a81b900460ff1681565b61021d6107cd565b60075461021d565b6102136107fe565b610213610381366004611725565b610916565b61021d610940565b61021d600a5481565b6102136103a5366004611725565b61098a565b600654610243906001600160a01b031681565b6102136103cb3660046116d3565b610a00565b610213610a26565b600454610243906001600160a01b031681565b600254610243906001600160a01b031681565b610406610d4c565b6009805460ff1916911515919091179055565b60035460405163f8b2cb4f60e01b81523060048201526000916001600160a01b03169063f8b2cb4f906024015b602060405180830381865afa158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190611742565b905090565b610494610d4c565b6706f05b59d3b20000600854826104ab9190611771565b11156104ed5760405162461bcd60e51b815260206004820152600c60248201526b0cccaca40e8dede40d0d2ced60a31b60448201526064015b60405180910390fd5b600755565b6104fb81610da6565b50565b610506610d4c565b61050e610f88565b610516610fdd565b61051e6107fe565b565b610528610d4c565b6706f05b59d3b200006007548261053f9190611771565b111561057c5760405162461bcd60e51b815260206004820152600c60248201526b0cccaca40e8dede40d0d2ced60a31b60448201526064016104e4565b600855565b600054600160a81b900460ff1680156105a557506001546001600160a01b03163b15155b1561066557600160009054906101000a90046001600160a01b03166001600160a01b0316633de39c116040518163ffffffff1660e01b81526004016020604051808303816000875af11580156105ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106239190611742565b3a11156106655760405162461bcd60e51b815260206004820152601060248201526f67617320697320746f6f20686967682160801b60448201526064016104e4565b61051e610ffc565b610675610d4c565b61067d6107b5565b600560009054906101000a90046001600160a01b03166001600160a01b03166354c5aee16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106cd57600080fd5b505af11580156106e1573d6000803e3d6000fd5b50506003546001600160a01b03169150632e1a7d4d9050610700610419565b6040518263ffffffff1660e01b815260040161071e91815260200190565b600060405180830381600087803b15801561073857600080fd5b505af115801561074c573d6000803e3d6000fd5b50505050565b60095460ff161561051e576004546001600160a01b031633146106655760405162461bcd60e51b81526004016104e490611789565b61078f610d4c565b61051e600061114a565b60006107a3610419565b6107ab6107cd565b6104879190611771565b6107bd610d4c565b6107c561119a565b61051e6111dd565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401610446565b6108066111fb565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561084f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108739190611742565b905080156104fb5760035460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b1580156108c157600080fd5b505af11580156108d5573d6000803e3d6000fd5b505050507f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426610902610799565b60405190815260200160405180910390a150565b61091e610d4c565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516338359faf60e11b815290516000926001600160a01b03169163706b3f5e9160048083019260209291908290030181865afa158015610463573d6000803e3d6000fd5b610992610d4c565b6001600160a01b0381166109f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e4565b6104fb8161114a565b610a08610d4c565b60008054911515600160a81b0260ff60a81b19909216919091179055565b6004546001600160a01b03163314610a505760405162461bcd60e51b81526004016104e490611789565b6000600460009054906101000a90046001600160a01b03166001600160a01b03166376dfabb86040518163ffffffff1660e01b81526004016040805180830381865afa158015610aa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac891906117a9565b9050610ad2610ffc565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3f9190611742565b90506000610b4b610419565b9050610b5681610da6565b6002546004546001600160a01b039182169163a9059cbb9116610b798486611771565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610bc4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c919061180f565b801580610c625750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c609190611742565b155b610ccd5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016104e4565b6040516001600160a01b038316602482015260448101829052610d3090849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611248565b505050565b6060610d44848460008561131a565b949350505050565b6000546001600160a01b0316331461051e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e4565b6004546001600160a01b03163314610dd05760405162461bcd60e51b81526004016104e490611789565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3d9190611742565b905081811015610f21576003546001600160a01b0316632e1a7d4d610e62838561182c565b6040518263ffffffff1660e01b8152600401610e8091815260200190565b600060405180830381600087803b158015610e9a57600080fd5b505af1158015610eae573d6000803e3d6000fd5b50506002546040516370a0823160e01b81523060048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e9190611742565b90505b81811115610f2c5750805b600454600254610f49916001600160a01b039182169116836113f5565b7f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d610f72610799565b6040519081526020015b60405180910390a15050565b610f90611425565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460025461051e916001600160a01b039182169116600019610be8565b6110046111fb565b600560009054906101000a90046001600160a01b03166001600160a01b03166354c5aee16040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561105457600080fd5b505af1158015611068573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156110b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110db9190611742565b905080156104fb576110eb611475565b60006110f56107cd565b90506110ff6107fe565b42600a55337f9bc239f1724cacfb88cb1d66a2dc437467699b68a8c90d7b63110cf4b6f924108261112e610799565b6040805192835260208301919091520160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111a26111fb565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fc03390565b60035460025461051e916001600160a01b0391821691166000610be8565b600054600160a01b900460ff161561051e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e4565b600061129d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d359092919063ffffffff16565b805190915015610d3057808060200190518101906112bb919061180f565b610d305760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104e4565b60608247101561137b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104e4565b600080866001600160a01b03168587604051611397919061186f565b60006040518083038185875af1925050503d80600081146113d4576040519150601f19603f3d011682016040523d82523d6000602084013e6113d9565b606091505b50915091506113ea8783838761162a565b979650505050505050565b6040516001600160a01b038316602482015260448101829052610d3090849063a9059cbb60e01b90606401610cf9565b600054600160a01b900460ff1661051e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104e4565b6007546002546040516370a0823160e01b8152306004820152600092670de0b6b3a76400009290916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156114cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f39190611742565b6114fd919061188b565b61150791906118aa565b6008546002546040516370a0823160e01b8152306004820152929350600092670de0b6b3a764000092916001600160a01b0316906370a0823190602401602060405180830381865afa158015611561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115859190611742565b61158f919061188b565b61159991906118aa565b90506115c36115b06000546001600160a01b031690565b6002546001600160a01b031690846113f5565b80156115e6576006546002546115e6916001600160a01b039182169116836113f5565b6007547f7b28cbe16017943a65fcc059a53072c1b23b17da20571041d0555074ec88c434906116158385611771565b60408051928352602083019190915201610f7c565b6060831561169657825161168f576001600160a01b0385163b61168f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e4565b5081610d44565b610d4483838151156116ab5781518083602001fd5b8060405162461bcd60e51b81526004016104e491906118cc565b80151581146104fb57600080fd5b6000602082840312156116e557600080fd5b81356116f0816116c5565b9392505050565b60006020828403121561170957600080fd5b5035919050565b6001600160a01b03811681146104fb57600080fd5b60006020828403121561173757600080fd5b81356116f081611710565b60006020828403121561175457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156117845761178461175b565b500190565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b6000604082840312156117bb57600080fd5b6040516040810181811067ffffffffffffffff821117156117ec57634e487b7160e01b600052604160045260246000fd5b60405282516117fa81611710565b81526020928301519281019290925250919050565b60006020828403121561182157600080fd5b81516116f0816116c5565b60008282101561183e5761183e61175b565b500390565b60005b8381101561185e578181015183820152602001611846565b8381111561074c5750506000910152565b60008251611881818460208701611843565b9190910192915050565b60008160001904831182151516156118a5576118a561175b565b500290565b6000826118c757634e487b7160e01b600052601260045260246000fd5b500490565b60208152600082518060208401526118eb816040850160208701611843565b601f01601f1916919091016040019291505056fea264697066735822122044f766f3d34ddd25ccc3db0b3fabd1f523c73672f50aaf7aa98dd17cca12850164736f6c634300080c0033";

type CapSingleStakeStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapSingleStakeStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapSingleStakeStrategy__factory extends ContractFactory {
  constructor(...args: CapSingleStakeStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    _pool: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapSingleStakeStrategy> {
    return super.deploy(
      _vault,
      _pool,
      _rewards,
      _token,
      overrides || {}
    ) as Promise<CapSingleStakeStrategy>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    _pool: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vault,
      _pool,
      _rewards,
      _token,
      overrides || {}
    );
  }
  override attach(address: string): CapSingleStakeStrategy {
    return super.attach(address) as CapSingleStakeStrategy;
  }
  override connect(signer: Signer): CapSingleStakeStrategy__factory {
    return super.connect(signer) as CapSingleStakeStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapSingleStakeStrategyInterface {
    return new utils.Interface(_abi) as CapSingleStakeStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapSingleStakeStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CapSingleStakeStrategy;
  }
}
