/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  CapSingleStakeStrategy,
  CapSingleStakeStrategyInterface,
} from "../../../../../contracts/strategies/Cap/CapUsdcPoolStrategy.sol/CapSingleStakeStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChargedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "harvester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantTokenHarvested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "StratHarvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasprice",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDevFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestOnDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retireStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setDevFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_harvestOnDeposit",
        type: "bool",
      },
    ],
    name: "setHarvestOnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolTokenAddress",
        type: "address",
      },
    ],
    name: "setProtocolTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldGasThrottle",
        type: "bool",
      },
    ],
    name: "setShouldGasThrottle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setStakingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldGasThrottle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff60a81b1916600160a81b178155600180546001600160a01b03191673a43509661141f254f54d9a326e8ec851a0b9530717905560085564e8d4a510006009553480156200005657600080fd5b5060405162002252380380620022528339810160408190526200007991620005f8565b62000084336200018a565b6000805460ff60a01b19169055600480546001600160a01b038087166001600160a01b03199283161790925560038054868416908316179055600580548584169083161790556002805492841692909116919091179055620000e5620001da565b6002546040805163313ce56760e01b815290516001926001600160a01b03169163313ce5679160048083019260209291908290030181865afa15801562000130573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000156919062000655565b62000162919062000697565b6200016f90600a620007bc565b6200017c906003620007cd565b60075550620008b392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60035460025462000207916001600160a01b03918216911660001962000209602090811b62000c4117901c565b565b801580620002875750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156200025f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002859190620007ef565b155b620002ff5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620003579185916200035c16565b505050565b6000620003b8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200043a60201b62000d8e179092919060201c565b805190915015620003575780806020019051810190620003d9919062000809565b620003575760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401620002f6565b60606200044b848460008562000453565b949350505050565b606082471015620004b65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401620002f6565b600080866001600160a01b03168587604051620004d4919062000860565b60006040518083038185875af1925050503d806000811462000513576040519150601f19603f3d011682016040523d82523d6000602084013e62000518565b606091505b5090925090506200052c8783838762000537565b979650505050505050565b60608315620005a8578251620005a0576001600160a01b0385163b620005a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002f6565b50816200044b565b6200044b8383815115620005bf5781518083602001fd5b8060405162461bcd60e51b8152600401620002f691906200087e565b80516001600160a01b0381168114620005f357600080fd5b919050565b600080600080608085870312156200060f57600080fd5b6200061a85620005db565b93506200062a60208601620005db565b92506200063a60408601620005db565b91506200064a60608601620005db565b905092959194509250565b6000602082840312156200066857600080fd5b815160ff811681146200067a57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff841680821015620006b457620006b462000681565b90039392505050565b600181815b80851115620006fe578160001904821115620006e257620006e262000681565b80851615620006f057918102915b93841c9390800290620006c2565b509250929050565b6000826200071757506001620007b6565b816200072657506000620007b6565b81600181146200073f57600281146200074a576200076a565b6001915050620007b6565b60ff8411156200075e576200075e62000681565b50506001821b620007b6565b5060208310610133831016604e8410600b84101617156200078f575081810a620007b6565b6200079b8383620006bd565b8060001904821115620007b257620007b262000681565b0290505b92915050565b60006200067a60ff84168362000706565b6000816000190483118215151615620007ea57620007ea62000681565b500290565b6000602082840312156200080257600080fd5b5051919050565b6000602082840312156200081c57600080fd5b815180151581146200067a57600080fd5b60005b838110156200084a57818101518382015260200162000830565b838111156200085a576000848401525b50505050565b60008251620008748184602087016200082d565b9190910192915050565b60208152600082518060208401526200089f8160408501602087016200082d565b601f01601f19169190910160400192915050565b61198f80620008c36000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638456cb591161011a578063e3ff9370116100ad578063f706b1f21161007c578063f706b1f2146103aa578063fad4675e146103bd578063fb617787146103d0578063fbfa77cf146103d8578063fc0c546a146103eb57600080fd5b8063e3ff937014610373578063e7a7250a14610386578063f1a392da1461038e578063f2fde38b1461039757600080fd5b80639f8b5da1116100e95780639f8b5da114610347578063c1a3d44c1461035b578063c7287e9d14610363578063d0e30db01461036b57600080fd5b80638456cb591461030e5780638912cb8b146103165780638da5cb5b146103235780639ec5a8941461033457600080fd5b80634641257d116101925780635c975abb116101615780635c975abb146102cd5780636ec232d3146102eb578063715018a6146102fe578063722713f71461030657600080fd5b80634641257d146102ad5780634700d305146102b55780634b270a46146102bd578063573fef0a146102c557600080fd5b80631f1fcd51116101ce5780631f1fcd511461026e5780632e1a7d4d1461027f5780633f4ba83a14610292578063410dbf7e1461029a57600080fd5b80630e8fbb5a14610200578063115880861461021557806316f0115b146102305780631c75b6b21461025b575b600080fd5b61021361020e36600461172d565b6103fe565b005b61021d610419565b6040519081526020015b60405180910390f35b600354610243906001600160a01b031681565b6040516001600160a01b039091168152602001610227565b610213610269366004611751565b610490565b6002546001600160a01b0316610243565b61021361028d366004611751565b6104f6565b610213610502565b6102136102a8366004611751565b610524565b610213610585565b610213610671565b60085461021d565b610213610756565b600054600160a01b900460ff165b6040519015158152602001610227565b600154610243906001600160a01b031681565b61021361078b565b61021d61079d565b6102136107be565b600a546102db9060ff1681565b6000546001600160a01b0316610243565b600554610243906001600160a01b031681565b6000546102db90600160a81b900460ff1681565b61021d6107d6565b60075461021d565b610213610843565b61021361038136600461177f565b61096f565b61021d610999565b61021d600b5481565b6102136103a536600461177f565b6109e3565b600654610243906001600160a01b031681565b6102136103cb36600461172d565b610a59565b610213610a7f565b600454610243906001600160a01b031681565b600254610243906001600160a01b031681565b610406610da5565b600a805460ff1916911515919091179055565b600354604051633b5a0d4160e21b815230600482015260009182916001600160a01b039091169063ed68350490602401602060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a919061179c565b92915050565b610498610da5565b6706f05b59d3b20000600854826104af91906117cb565b11156104f15760405162461bcd60e51b815260206004820152600c60248201526b0cccaca40e8dede40d0d2ced60a31b60448201526064015b60405180910390fd5b600755565b6104ff81610dff565b50565b61050a610da5565b610512610fe2565b61051a611037565b610522610843565b565b61052c610da5565b6706f05b59d3b200006007548261054391906117cb565b11156105805760405162461bcd60e51b815260206004820152600c60248201526b0cccaca40e8dede40d0d2ced60a31b60448201526064016104e8565b600855565b600054600160a81b900460ff1680156105a957506001546001600160a01b03163b15155b1561066957600160009054906101000a90046001600160a01b03166001600160a01b0316633de39c116040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610603573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610627919061179c565b3a11156106695760405162461bcd60e51b815260206004820152601060248201526f67617320697320746f6f20686967682160801b60448201526064016104e8565b610522611056565b610679610da5565b6106816107be565b600560009054906101000a90046001600160a01b03166001600160a01b03166354c5aee16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b50506003546001600160a01b03169150632e1a7d4d9050610704610419565b6040518263ffffffff1660e01b815260040161072291815260200190565b600060405180830381600087803b15801561073c57600080fd5b505af1158015610750573d6000803e3d6000fd5b50505050565b600a5460ff1615610522576004546001600160a01b031633146106695760405162461bcd60e51b81526004016104e8906117e3565b610793610da5565b61052260006111a4565b60006107a7610419565b6107af6107d6565b6107b991906117cb565b905090565b6107c6610da5565b6107ce6111f4565b610522611237565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b9919061179c565b61084b611255565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b8919061179c565b905080156104ff576003546009546001600160a01b039091169063b6b55f25906108e29084611803565b6040518263ffffffff1660e01b815260040161090091815260200190565b600060405180830381600087803b15801561091a57600080fd5b505af115801561092e573d6000803e3d6000fd5b505050507f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e3842661095b61079d565b60405190815260200160405180910390a150565b610977610da5565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516338359faf60e11b815290516000926001600160a01b03169163706b3f5e9160048083019260209291908290030181865afa15801561081f573d6000803e3d6000fd5b6109eb610da5565b6001600160a01b038116610a505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e8565b6104ff816111a4565b610a61610da5565b60008054911515600160a81b0260ff60a81b19909216919091179055565b6004546001600160a01b03163314610aa95760405162461bcd60e51b81526004016104e8906117e3565b6000600460009054906101000a90046001600160a01b03166001600160a01b03166376dfabb86040518163ffffffff1660e01b81526004016040805180830381865afa158015610afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b219190611822565b9050610b2b611056565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b98919061179c565b90506000610ba4610419565b9050610baf81610dff565b6002546004546001600160a01b039182169163a9059cbb9116610bd284866117cb565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610c1d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190611888565b801580610cbb5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb9919061179c565b155b610d265760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016104e8565b6040516001600160a01b038316602482015260448101829052610d8990849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526112a2565b505050565b6060610d9d8484600085611374565b949350505050565b6000546001600160a01b031633146105225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e8565b6004546001600160a01b03163314610e295760405162461bcd60e51b81526004016104e8906117e3565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e96919061179c565b905081811015610f7b576000610eac82846118a5565b600354604051632e1a7d4d60e01b8152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610ef357600080fd5b505af1158015610f07573d6000803e3d6000fd5b50506002546040516370a0823160e01b81523060048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610f53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f77919061179c565b9150505b81811115610f865750805b600454600254610fa3916001600160a01b0391821691168361144f565b7f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d610fcc61079d565b6040519081526020015b60405180910390a15050565b610fea61147f565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354600254610522916001600160a01b039182169116600019610c41565b61105e611255565b600560009054906101000a90046001600160a01b03166001600160a01b03166354c5aee16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110ae57600080fd5b505af11580156110c2573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015611111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611135919061179c565b905080156104ff576111456114cf565b600061114f6107d6565b9050611159610843565b42600b55337f9bc239f1724cacfb88cb1d66a2dc437467699b68a8c90d7b63110cf4b6f924108261118861079d565b6040805192835260208301919091520160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111fc611255565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861101a3390565b600354600254610522916001600160a01b0391821691166000610c41565b600054600160a01b900460ff16156105225760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e8565b60006112f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d8e9092919063ffffffff16565b805190915015610d8957808060200190518101906113159190611888565b610d895760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104e8565b6060824710156113d55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104e8565b600080866001600160a01b031685876040516113f191906118e8565b60006040518083038185875af1925050503d806000811461142e576040519150601f19603f3d011682016040523d82523d6000602084013e611433565b606091505b509150915061144487838387611684565b979650505050505050565b6040516001600160a01b038316602482015260448101829052610d8990849063a9059cbb60e01b90606401610d52565b600054600160a01b900460ff166105225760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104e8565b6007546002546040516370a0823160e01b8152306004820152600092670de0b6b3a76400009290916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154d919061179c565b6115579190611803565b6115619190611904565b6008546002546040516370a0823160e01b8152306004820152929350600092670de0b6b3a764000092916001600160a01b0316906370a0823190602401602060405180830381865afa1580156115bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115df919061179c565b6115e99190611803565b6115f39190611904565b905061161d61160a6000546001600160a01b031690565b6002546001600160a01b0316908461144f565b801561164057600654600254611640916001600160a01b0391821691168361144f565b6007547f7b28cbe16017943a65fcc059a53072c1b23b17da20571041d0555074ec88c4349061166f83856117cb565b60408051928352602083019190915201610fd6565b606083156116f05782516116e9576001600160a01b0385163b6116e95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e8565b5081610d9d565b610d9d83838151156117055781518083602001fd5b8060405162461bcd60e51b81526004016104e89190611926565b80151581146104ff57600080fd5b60006020828403121561173f57600080fd5b813561174a8161171f565b9392505050565b60006020828403121561176357600080fd5b5035919050565b6001600160a01b03811681146104ff57600080fd5b60006020828403121561179157600080fd5b813561174a8161176a565b6000602082840312156117ae57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156117de576117de6117b5565b500190565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b600081600019048311821515161561181d5761181d6117b5565b500290565b60006040828403121561183457600080fd5b6040516040810181811067ffffffffffffffff8211171561186557634e487b7160e01b600052604160045260246000fd5b60405282516118738161176a565b81526020928301519281019290925250919050565b60006020828403121561189a57600080fd5b815161174a8161171f565b6000828210156118b7576118b76117b5565b500390565b60005b838110156118d75781810151838201526020016118bf565b838111156107505750506000910152565b600082516118fa8184602087016118bc565b9190910192915050565b60008261192157634e487b7160e01b600052601260045260246000fd5b500490565b60208152600082518060208401526119458160408501602087016118bc565b601f01601f1916919091016040019291505056fea26469706673582212208a797b0f01bce5db7b012ef23ad1d98ccd16b1352ae6d6a14d6da860c9a1275364736f6c634300080c0033";

type CapSingleStakeStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapSingleStakeStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapSingleStakeStrategy__factory extends ContractFactory {
  constructor(...args: CapSingleStakeStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    _pool: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapSingleStakeStrategy> {
    return super.deploy(
      _vault,
      _pool,
      _rewards,
      _token,
      overrides || {}
    ) as Promise<CapSingleStakeStrategy>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    _pool: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vault,
      _pool,
      _rewards,
      _token,
      overrides || {}
    );
  }
  override attach(address: string): CapSingleStakeStrategy {
    return super.attach(address) as CapSingleStakeStrategy;
  }
  override connect(signer: Signer): CapSingleStakeStrategy__factory {
    return super.connect(signer) as CapSingleStakeStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapSingleStakeStrategyInterface {
    return new utils.Interface(_abi) as CapSingleStakeStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapSingleStakeStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CapSingleStakeStrategy;
  }
}
