/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CapSingleStakeStrategy,
  CapSingleStakeStrategyInterface,
} from "../../../../contracts/strategies/Cap/CapSingleStakeStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChargedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "harvester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantTokenHarvested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "StratHarvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasprice",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestOnDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nativeToWant",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retireStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_harvestOnDeposit",
        type: "bool",
      },
    ],
    name: "setHarvestOnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldGasThrottle",
        type: "bool",
      },
    ],
    name: "setShouldGasThrottle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldGasThrottle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff60a81b1916600160a81b179055600180546001600160a01b03191673a43509661141f254f54d9a326e8ec851a0b95307179055670429d069189e00006006553480156200005657600080fd5b5060405162001e0338038062001e0383398101604081905262000079916200055d565b6200008433620000ef565b6000805460ff60a01b19169055600480546001600160a01b038087166001600160a01b03199283161790925560038054868416908316179055600580548584169083161790556002805492841692909116919091179055620000e56200013f565b5050505062000685565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6003546002546200016c916001600160a01b0391821691166000196200016e602090811b62000a9517901c565b565b801580620001ec5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015620001c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ea9190620005ba565b155b620002645760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620002bc918591620002c116565b505050565b60006200031d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166200039f60201b62000be2179092919060201c565b805190915015620002bc57808060200190518101906200033e9190620005d4565b620002bc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200025b565b6060620003b08484600085620003b8565b949350505050565b6060824710156200041b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200025b565b600080866001600160a01b0316858760405162000439919062000632565b60006040518083038185875af1925050503d806000811462000478576040519150601f19603f3d011682016040523d82523d6000602084013e6200047d565b606091505b50909250905062000491878383876200049c565b979650505050505050565b606083156200050d57825162000505576001600160a01b0385163b620005055760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200025b565b5081620003b0565b620003b08383815115620005245781518083602001fd5b8060405162461bcd60e51b81526004016200025b919062000650565b80516001600160a01b03811681146200055857600080fd5b919050565b600080600080608085870312156200057457600080fd5b6200057f8562000540565b93506200058f6020860162000540565b92506200059f6040860162000540565b9150620005af6060860162000540565b905092959194509250565b600060208284031215620005cd57600080fd5b5051919050565b600060208284031215620005e757600080fd5b81518015158114620005f857600080fd5b9392505050565b60005b838110156200061c57818101518382015260200162000602565b838111156200062c576000848401525b50505050565b6000825162000646818460208701620005ff565b9190910192915050565b602081526000825180602084015262000671816040850160208701620005ff565b601f01601f19169190910160400192915050565b61176e80620006956000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638912cb8b11610104578063deebc062116100a2578063fad4675e11610071578063fad4675e1461034b578063fb6177871461035e578063fbfa77cf14610366578063fc0c546a1461037957600080fd5b8063deebc06214610318578063e7a7250a14610327578063f1a392da1461032f578063f2fde38b1461033857600080fd5b80639ec5a894116100de5780639ec5a894146102e15780639f8b5da1146102f4578063c1a3d44c14610308578063d0e30db01461031057600080fd5b80638912cb8b146102bc5780638da5cb5b146102c957806397fd323d146102da57600080fd5b80634700d305116101715780636ec232d31161014b5780636ec232d314610291578063715018a6146102a4578063722713f7146102ac5780638456cb59146102b457600080fd5b80634700d30514610263578063573fef0a1461026b5780635c975abb1461027357600080fd5b80631f1fcd51116101ad5780631f1fcd511461022f5780632e1a7d4d146102405780633f4ba83a146102535780634641257d1461025b57600080fd5b80630e8fbb5a146101d457806311588086146101e957806316f0115b14610204575b600080fd5b6101e76101e23660046114bf565b61038c565b005b6101f16103a7565b6040519081526020015b60405180910390f35b600354610217906001600160a01b031681565b6040516001600160a01b0390911681526020016101fb565b6002546001600160a01b0316610217565b6101e761024e3660046114e3565b61041a565b6101e7610426565b6101e7610448565b6101e7610539565b6101e761061e565b600054600160a01b900460ff165b60405190151581526020016101fb565b600154610217906001600160a01b031681565b6101e7610653565b6101f1610665565b6101e7610681565b6007546102819060ff1681565b6000546001600160a01b0316610217565b60006101f1565b600554610217906001600160a01b031681565b60005461028190600160a81b900460ff1681565b6101f1610699565b6101e76106ca565b60606040516101fb91906114fc565b6101f16107e3565b6101f160085481565b6101e761034636600461155e565b61082d565b6101e76103593660046114bf565b6108a3565b6101e76108c9565b600454610217906001600160a01b031681565b600254610217906001600160a01b031681565b610394610bf9565b6007805460ff1916911515919091179055565b60035460405163f8b2cb4f60e01b81523060048201526000916001600160a01b03169063f8b2cb4f906024015b602060405180830381865afa1580156103f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610415919061157b565b905090565b61042381610c53565b50565b61042e610bf9565b610436610e34565b61043e610e89565b6104466106ca565b565b600054600160a81b900460ff16801561046c57506001546001600160a01b03163b15155b1561053157600160009054906101000a90046001600160a01b03166001600160a01b0316633de39c116040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea919061157b565b3a11156105315760405162461bcd60e51b815260206004820152601060248201526f67617320697320746f6f20686967682160801b60448201526064015b60405180910390fd5b610446610ea8565b610541610bf9565b610549610681565b600560009054906101000a90046001600160a01b03166001600160a01b03166354c5aee16040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561059957600080fd5b505af11580156105ad573d6000803e3d6000fd5b50506003546001600160a01b03169150632e1a7d4d90506105cc6103a7565b6040518263ffffffff1660e01b81526004016105ea91815260200190565b600060405180830381600087803b15801561060457600080fd5b505af1158015610618573d6000803e3d6000fd5b50505050565b60075460ff1615610446576004546001600160a01b031633146105315760405162461bcd60e51b815260040161052890611594565b61065b610bf9565b6104466000610ff6565b600061066f6103a7565b610677610699565b61041591906115ca565b610689610bf9565b610691611046565b610446611089565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016103d4565b6106d26110a7565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f919061157b565b905080156104235760035460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b15801561078d57600080fd5b505af11580156107a1573d6000803e3d6000fd5b505050507f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e384266107ce610665565b6040519081526020015b60405180910390a150565b600554604080516338359faf60e11b815290516000926001600160a01b03169163706b3f5e9160048083019260209291908290030181865afa1580156103f1573d6000803e3d6000fd5b610835610bf9565b6001600160a01b03811661089a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610528565b61042381610ff6565b6108ab610bf9565b60008054911515600160a81b0260ff60a81b19909216919091179055565b6004546001600160a01b031633146108f35760405162461bcd60e51b815260040161052890611594565b6000600460009054906101000a90046001600160a01b03166001600160a01b03166376dfabb86040518163ffffffff1660e01b81526004016040805180830381865afa158015610947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096b91906115e2565b8051909150610978610ea8565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e5919061157b565b905060006109f16103a7565b90506109fc81610c53565b6002546004546001600160a01b039182169163a9059cbb9116610a1f84866115ca565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e9190611648565b5050505050565b801580610b0f5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610ae9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0d919061157b565b155b610b7a5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610528565b6040516001600160a01b038316602482015260448101829052610bdd90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526110f4565b505050565b6060610bf184846000856111c6565b949350505050565b6000546001600160a01b031633146104465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610528565b6004546001600160a01b03163314610c7d5760405162461bcd60e51b815260040161052890611594565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cea919061157b565b905081811015610dce576003546001600160a01b0316632e1a7d4d610d0f8385611665565b6040518263ffffffff1660e01b8152600401610d2d91815260200190565b600060405180830381600087803b158015610d4757600080fd5b505af1158015610d5b573d6000803e3d6000fd5b50506002546040516370a0823160e01b81523060048201526001600160a01b0390911692506370a082319150602401602060405180830381865afa158015610da7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcb919061157b565b90505b81811115610dd95750805b600454600254610df6916001600160a01b039182169116836112a1565b7f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d610e1f610665565b60405190815260200160405180910390a15050565b610e3c6112d1565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354600254610446916001600160a01b039182169116600019610a95565b610eb06110a7565b600560009054906101000a90046001600160a01b03166001600160a01b03166354c5aee16040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f0057600080fd5b505af1158015610f14573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015610f63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f87919061157b565b9050801561042357610f97611321565b6000610fa1610699565b9050610fab6106ca565b42600855337f9bc239f1724cacfb88cb1d66a2dc437467699b68a8c90d7b63110cf4b6f9241082610fda610665565b6040805192835260208301919091520160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61104e6110a7565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e6c3390565b600354600254610446916001600160a01b0391821691166000610a95565b600054600160a01b900460ff16156104465760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610528565b6000611149826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610be29092919063ffffffff16565b805190915015610bdd57808060200190518101906111679190611648565b610bdd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610528565b6060824710156112275760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610528565b600080866001600160a01b0316858760405161124391906116a8565b60006040518083038185875af1925050503d8060008114611280576040519150601f19603f3d011682016040523d82523d6000602084013e611285565b606091505b509150915061129687838387611416565b979650505050505050565b6040516001600160a01b038316602482015260448101829052610bdd90849063a9059cbb60e01b90606401610ba6565b600054600160a01b900460ff166104465760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610528565b6006546002546040516370a0823160e01b8152306004820152600092670de0b6b3a76400009290916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561137b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139f919061157b565b6113a991906116c4565b6113b391906116e3565b90506113dd6113ca6000546001600160a01b031690565b6002546001600160a01b031690836112a1565b60065460408051918252602082018390527f7b28cbe16017943a65fcc059a53072c1b23b17da20571041d0555074ec88c43491016107d8565b6060831561148257825161147b576001600160a01b0385163b61147b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610528565b5081610bf1565b610bf183838151156114975781518083602001fd5b8060405162461bcd60e51b81526004016105289190611705565b801515811461042357600080fd5b6000602082840312156114d157600080fd5b81356114dc816114b1565b9392505050565b6000602082840312156114f557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561153d5783516001600160a01b031683529284019291840191600101611518565b50909695505050505050565b6001600160a01b038116811461042357600080fd5b60006020828403121561157057600080fd5b81356114dc81611549565b60006020828403121561158d57600080fd5b5051919050565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156115dd576115dd6115b4565b500190565b6000604082840312156115f457600080fd5b6040516040810181811067ffffffffffffffff8211171561162557634e487b7160e01b600052604160045260246000fd5b604052825161163381611549565b81526020928301519281019290925250919050565b60006020828403121561165a57600080fd5b81516114dc816114b1565b600082821015611677576116776115b4565b500390565b60005b8381101561169757818101518382015260200161167f565b838111156106185750506000910152565b600082516116ba81846020870161167c565b9190910192915050565b60008160001904831182151516156116de576116de6115b4565b500290565b60008261170057634e487b7160e01b600052601260045260246000fd5b500490565b602081526000825180602084015261172481604085016020870161167c565b601f01601f1916919091016040019291505056fea2646970667358221220393c70839ee5f638e9166b77363a1396dd09a69111caf62946479bab3a0c654064736f6c634300080c0033";

type CapSingleStakeStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapSingleStakeStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapSingleStakeStrategy__factory extends ContractFactory {
  constructor(...args: CapSingleStakeStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    _pool: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapSingleStakeStrategy> {
    return super.deploy(
      _vault,
      _pool,
      _rewards,
      _token,
      overrides || {}
    ) as Promise<CapSingleStakeStrategy>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    _pool: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vault,
      _pool,
      _rewards,
      _token,
      overrides || {}
    );
  }
  override attach(address: string): CapSingleStakeStrategy {
    return super.attach(address) as CapSingleStakeStrategy;
  }
  override connect(signer: Signer): CapSingleStakeStrategy__factory {
    return super.connect(signer) as CapSingleStakeStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapSingleStakeStrategyInterface {
    return new utils.Interface(_abi) as CapSingleStakeStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapSingleStakeStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CapSingleStakeStrategy;
  }
}
