/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CapSingleStakeStrategyETH,
  CapSingleStakeStrategyETHInterface,
} from "../../../../contracts/strategies/Cap/CapSingleStakeStrategyETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewards",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChargedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "harvester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wantTokenHarvested",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "StratHarvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tvl",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "gasprice",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDevFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestOnDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "panic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "retireStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setDevFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_harvestOnDeposit",
        type: "bool",
      },
    ],
    name: "setHarvestOnDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_protocolTokenAddress",
        type: "address",
      },
    ],
    name: "setProtocolTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_shouldGasThrottle",
        type: "bool",
      },
    ],
    name: "setShouldGasThrottle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setStakingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldGasThrottle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff60a81b1916600160a81b178155600180546001600160a01b03191673a43509661141f254f54d9a326e8ec851a0b95307179055670429d069189e00006006556007553480156200005957600080fd5b50604051620014a5380380620014a58339810160408190526200007c9162000144565b6200008733620000d7565b6000805460ff60a01b19169055600380546001600160a01b039485166001600160a01b0319918216179091556002805493851693821693909317909255600480549190931691161790556200018e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200013f57600080fd5b919050565b6000806000606084860312156200015a57600080fd5b620001658462000127565b9250620001756020850162000127565b9150620001856040850162000127565b90509250925092565b611307806200019e6000396000f3fe6080604052600436106101c45760003560e01c80638456cb59116100f6578063e3ff93701161008f578063f706b1f211610061578063f706b1f2146104b4578063fad4675e146104d4578063fb617787146104f4578063fbfa77cf1461050957005b8063e3ff937014610449578063e7a7250a14610469578063f1a392da1461047e578063f2fde38b1461049457005b80639f8b5da1116100c85780639f8b5da1146103f8578063c1a3d44c14610419578063c7287e9d1461042c578063d0e30db01461044157005b80638456cb591461038b5780638912cb8b146103a05780638da5cb5b146103ba5780639ec5a894146103d857005b80634641257d116101685780635c975abb1161013a5780635c975abb146103165780636ec232d314610341578063715018a614610361578063722713f71461037657005b80634641257d146102c25780634700d305146102d75780634b270a46146102ec578063573fef0a1461030157005b80631c75b6b2116101a15780631c75b6b21461024d5780632e1a7d4d1461026d5780633f4ba83a1461028d578063410dbf7e146102a257005b80630e8fbb5a146101cd57806311588086146101ed57806316f0115b1461021557005b366101cb57005b005b3480156101d957600080fd5b506101cb6101e83660046111a7565b610529565b3480156101f957600080fd5b50610202610544565b6040519081526020015b60405180910390f35b34801561022157600080fd5b50600254610235906001600160a01b031681565b6040516001600160a01b03909116815260200161020c565b34801561025957600080fd5b506101cb6102683660046111d0565b6105b6565b34801561027957600080fd5b506101cb6102883660046111d0565b61061c565b34801561029957600080fd5b506101cb610628565b3480156102ae57600080fd5b506101cb6102bd3660046111d0565b610642565b3480156102ce57600080fd5b506101cb6106a3565b3480156102e357600080fd5b506101cb61078f565b3480156102f857600080fd5b50600754610202565b34801561030d57600080fd5b506101cb610867565b34801561032257600080fd5b50600054600160a01b900460ff165b604051901515815260200161020c565b34801561034d57600080fd5b50600154610235906001600160a01b031681565b34801561036d57600080fd5b506101cb61089c565b34801561038257600080fd5b506102026108ae565b34801561039757600080fd5b506101cb6108c2565b3480156103ac57600080fd5b506008546103319060ff1681565b3480156103c657600080fd5b506000546001600160a01b0316610235565b3480156103e457600080fd5b50600454610235906001600160a01b031681565b34801561040457600080fd5b5060005461033190600160a81b900460ff1681565b34801561042557600080fd5b5047610202565b34801561043857600080fd5b50600654610202565b6101cb6108d2565b34801561045557600080fd5b506101cb6104643660046111e9565b610986565b34801561047557600080fd5b506102026109b0565b34801561048a57600080fd5b5061020260095481565b3480156104a057600080fd5b506101cb6104af3660046111e9565b610a05565b3480156104c057600080fd5b50600554610235906001600160a01b031681565b3480156104e057600080fd5b506101cb6104ef3660046111a7565b610a7b565b34801561050057600080fd5b506101cb610aa1565b34801561051557600080fd5b50600354610235906001600160a01b031681565b610531610b8b565b6008805460ff1916911515919091179055565b60025460405163f8b2cb4f60e01b81523060048201526000916001600160a01b03169063f8b2cb4f90602401602060405180830381865afa15801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b19190611212565b905090565b6105be610b8b565b6706f05b59d3b20000600754826105d59190611241565b11156106175760405162461bcd60e51b815260206004820152600c60248201526b0cccaca40e8dede40d0d2ced60a31b60448201526064015b60405180910390fd5b600655565b61062581610be5565b50565b610630610b8b565b610638610d67565b6106406108d2565b565b61064a610b8b565b6706f05b59d3b20000600654826106619190611241565b111561069e5760405162461bcd60e51b815260206004820152600c60248201526b0cccaca40e8dede40d0d2ced60a31b604482015260640161060e565b600755565b600054600160a81b900460ff1680156106c757506001546001600160a01b03163b15155b1561078757600160009054906101000a90046001600160a01b03166001600160a01b0316633de39c116040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107459190611212565b3a11156107875760405162461bcd60e51b815260206004820152601060248201526f67617320697320746f6f20686967682160801b604482015260640161060e565b610640610db7565b610797610b8b565b61079f6108c2565b60048054604080516354c5aee160e01b815290516001600160a01b03909216926354c5aee192828201926000929082900301818387803b1580156107e257600080fd5b505af11580156107f6573d6000803e3d6000fd5b50506002546001600160a01b03169150632e1a7d4d9050610815610544565b6040518263ffffffff1660e01b815260040161083391815260200190565b600060405180830381600087803b15801561084d57600080fd5b505af1158015610861573d6000803e3d6000fd5b50505050565b60085460ff1615610640576003546001600160a01b031633146107875760405162461bcd60e51b815260040161060e90611259565b6108a4610b8b565b6106406000610e7f565b60006108b8610544565b6105b19047611241565b6108ca610b8b565b610640610ecf565b6108da610f12565b471561064057600260009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561093057600080fd5b505af1158015610944573d6000803e3d6000fd5b50505050507f4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e384266109726108ae565b6040519081526020015b60405180910390a1565b61098e610b8b565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000600460009054906101000a90046001600160a01b03166001600160a01b031663706b3f5e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058d573d6000803e3d6000fd5b610a0d610b8b565b6001600160a01b038116610a725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060e565b61062581610e7f565b610a83610b8b565b60008054911515600160a81b0260ff60a81b19909216919091179055565b6003546001600160a01b03163314610acb5760405162461bcd60e51b815260040161060e90611259565b610ad3610db7565b476000610ade610544565b9050610ae981610be5565b6003546000906001600160a01b0316610b028385611241565b604051600081818185875af1925050503d8060008114610b3e576040519150601f19603f3d011682016040523d82523d6000602084013e610b43565b606091505b5050905080610b865760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915488119052531151608a1b604482015260640161060e565b505050565b6000546001600160a01b031633146106405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060e565b6003546001600160a01b03163314610c0f5760405162461bcd60e51b815260040161060e90611259565b4781811015610c87576002546001600160a01b0316632e1a7d4d610c338385611279565b6040518263ffffffff1660e01b8152600401610c5191815260200190565b600060405180830381600087803b158015610c6b57600080fd5b505af1158015610c7f573d6000803e3d6000fd5b505050504790505b81811115610c925750805b6003546040516000916001600160a01b03169083908381818185875af1925050503d8060008114610cdf576040519150601f19603f3d011682016040523d82523d6000602084013e610ce4565b606091505b5050905080610d275760405162461bcd60e51b815260206004820152600f60248201526e15d2551211149055d7d19052531151608a1b604482015260640161060e565b7f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d610d506108ae565b6040519081526020015b60405180910390a1505050565b610d6f610f5f565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200161097c565b610dbf610f12565b60048054604080516354c5aee160e01b815290516001600160a01b03909216926354c5aee192828201926000929082900301818387803b158015610e0257600080fd5b505af1158015610e16573d6000803e3d6000fd5b50479250508115905061062557610e2b610faf565b47610e346108d2565b42600955337f9bc239f1724cacfb88cb1d66a2dc437467699b68a8c90d7b63110cf4b6f9241082610e636108ae565b6040805192835260208301919091520160405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ed7610f12565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d9f3390565b600054600160a01b900460ff16156106405760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161060e565b600054600160a01b900460ff166106405760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161060e565b6000670de0b6b3a764000060065447610fc89190611290565b610fd291906112af565b90506000670de0b6b3a764000060075447610fed9190611290565b610ff791906112af565b9050600061100d6000546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114611057576040519150601f19603f3d011682016040523d82523d6000602084013e61105c565b606091505b50509050806110ad5760405162461bcd60e51b815260206004820152601960248201527f4f574e45525f4645455f5452414e534645525f4641494c454400000000000000604482015260640161060e565b8115611163576005546040516000916001600160a01b03169084908381818185875af1925050503d8060008114611100576040519150601f19603f3d011682016040523d82523d6000602084013e611105565b606091505b50509050806111615760405162461bcd60e51b815260206004820152602260248201527f50524f544f434f4c5f544f4b454e5f4645455f5452414e534645525f4641494c604482015261115160f21b606482015260840161060e565b505b6006547f7b28cbe16017943a65fcc059a53072c1b23b17da20571041d0555074ec88c434906111928486611241565b60408051928352602083019190915201610d5a565b6000602082840312156111b957600080fd5b813580151581146111c957600080fd5b9392505050565b6000602082840312156111e257600080fd5b5035919050565b6000602082840312156111fb57600080fd5b81356001600160a01b03811681146111c957600080fd5b60006020828403121561122457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156112545761125461122b565b500190565b602080825260069082015265085d985d5b1d60d21b604082015260600190565b60008282101561128b5761128b61122b565b500390565b60008160001904831182151516156112aa576112aa61122b565b500290565b6000826112cc57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220e1baf54e5d4c6ea7514596e7457396fc9e623b05a1736e6efc0e034c1390cf2864736f6c634300080c0033";

type CapSingleStakeStrategyETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapSingleStakeStrategyETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapSingleStakeStrategyETH__factory extends ContractFactory {
  constructor(...args: CapSingleStakeStrategyETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    _pool: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CapSingleStakeStrategyETH> {
    return super.deploy(
      _vault,
      _pool,
      _rewards,
      overrides || {}
    ) as Promise<CapSingleStakeStrategyETH>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    _pool: PromiseOrValue<string>,
    _rewards: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, _pool, _rewards, overrides || {});
  }
  override attach(address: string): CapSingleStakeStrategyETH {
    return super.attach(address) as CapSingleStakeStrategyETH;
  }
  override connect(signer: Signer): CapSingleStakeStrategyETH__factory {
    return super.connect(signer) as CapSingleStakeStrategyETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapSingleStakeStrategyETHInterface {
    return new utils.Interface(_abi) as CapSingleStakeStrategyETHInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CapSingleStakeStrategyETH {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CapSingleStakeStrategyETH;
  }
}
