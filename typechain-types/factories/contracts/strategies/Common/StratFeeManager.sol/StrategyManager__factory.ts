/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  StrategyManager,
  StrategyManagerInterface,
} from "../../../../../contracts/strategies/Common/StratFeeManager.sol/StrategyManager";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "unirouter",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct StrategyManager.CommonAddresses",
        name: "_commonAddresses",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SetOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "unirouter",
        type: "address",
      },
    ],
    name: "SetUnirouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "SetVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "beforeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_unirouter",
        type: "address",
      },
    ],
    name: "setUnirouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unirouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670429d069189e000060035534801561001c57600080fd5b5060405161060738038061060783398101604081905261003b916101de565b61004433610098565b6000805460ff60a01b191690558051600180546001600160a01b039283166001600160a01b0319918216179091556020830151600280549190931691161790556040810151610092906100e8565b50610257565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100f0610166565b6001600160a01b03811661015a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61016381610098565b50565b6000546001600160a01b031633146101c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610151565b565b80516001600160a01b03811681146101d957600080fd5b919050565b6000606082840312156101f057600080fd5b604051606081016001600160401b038111828210171561022057634e487b7160e01b600052604160045260246000fd5b60405261022c836101c2565b815261023a602084016101c2565b602082015261024b604084016101c2565b60408201529392505050565b6103a1806102666000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146100fa5780638da5cb5b14610102578063d92f3d7314610113578063f2fde38b14610126578063fbfa77cf1461013957600080fd5b8063257ae0de14610098578063573fef0a146100c85780635c975abb146100ca5780636817031b146100e7575b600080fd5b6002546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b005b600054600160a01b900460ff1660405190151581526020016100bf565b6100c86100f536600461033b565b61014e565b6100c86101ab565b6000546001600160a01b03166100ab565b6100c861012136600461033b565b6101bd565b6100c861013436600461033b565b610213565b6001546100ab906001600160a01b031681565b565b610156610291565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fd459c7242e23d490831b5676a611c4342d899d28f342d89ae80793e56a930f30906020015b60405180910390a150565b6101b3610291565b61014c60006102eb565b6101c5610291565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ca6e64c4522e68e154aa9372f2c5969cd37d9640e59f66953dc472f54ee86fa906020016101a0565b61021b610291565b6001600160a01b0381166102855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61028e816102eb565b50565b6000546001600160a01b0316331461014c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561034d57600080fd5b81356001600160a01b038116811461036457600080fd5b939250505056fea2646970667358221220349b42156e7a1a6a034c9ef58d400b24ea87c825687c40cc2ff4b43c66ffd5fe64736f6c634300080c0033";

type StrategyManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyManager__factory extends ContractFactory {
  constructor(...args: StrategyManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _commonAddresses: StrategyManager.CommonAddressesStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StrategyManager> {
    return super.deploy(
      _commonAddresses,
      overrides || {}
    ) as Promise<StrategyManager>;
  }
  override getDeployTransaction(
    _commonAddresses: StrategyManager.CommonAddressesStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_commonAddresses, overrides || {});
  }
  override attach(address: string): StrategyManager {
    return super.attach(address) as StrategyManager;
  }
  override connect(signer: Signer): StrategyManager__factory {
    return super.connect(signer) as StrategyManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyManagerInterface {
    return new utils.Interface(_abi) as StrategyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyManager {
    return new Contract(address, _abi, signerOrProvider) as StrategyManager;
  }
}
