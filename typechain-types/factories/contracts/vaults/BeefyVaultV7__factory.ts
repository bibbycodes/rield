/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BeefyVaultV7,
  BeefyVaultV7Interface,
} from "../../../contracts/vaults/BeefyVaultV7";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "NewStratCandidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradeStrat",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvalDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "available",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "earn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPricePerFullShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "inCaseTokensGetStuck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IStrategyV7",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "proposeStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stratCandidate",
    outputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposedTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategy",
    outputs: [
      {
        internalType: "contract IStrategyV7",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612202806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638da5cb5b11610104578063b6b55f25116100a2578063def68a9c11610071578063def68a9c146103dc578063e2d1e75c146103ef578063e6685244146103f8578063f2fde38b1461040057600080fd5b8063b6b55f25146103a6578063d389800f146103b9578063dd62ed3e146103c1578063de5f6268146103d457600080fd5b8063a457c2d7116100de578063a457c2d714610365578063a8c62e7614610378578063a9059cbb1461038b578063b69ef8a81461039e57600080fd5b80638da5cb5b14610339578063906571471461034a57806395d89b411461035d57600080fd5b8063395093511161017c578063715018a61161014b578063715018a6146102eb57806376dfabb8146102f357806377c7b8fc14610329578063853828b61461033157600080fd5b8063395093511461029457806348a0d754146102a75780635b12ff9b146102af57806370a08231146102c257600080fd5b80631f1fcd51116101b85780631f1fcd511461023257806323b872dd146102525780632e1a7d4d14610265578063313ce5671461027a57600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e7610413565b6040516101f49190611de5565b60405180910390f35b61021061020b366004611e2d565b6104a5565b60405190151581526020016101f4565b6035545b6040519081526020016101f4565b61023a6104bd565b6040516001600160a01b0390911681526020016101f4565b610210610260366004611e59565b610530565b610278610273366004611e9a565b610554565b005b610282610730565b60405160ff90911681526020016101f4565b6102106102a2366004611e2d565b610814565b610224610836565b6102786102bd366004611eb3565b6108aa565b6102246102d0366004611eb3565b6001600160a01b031660009081526033602052604090205490565b610278610aa4565b60c95460ca5461030a916001600160a01b03169082565b604080516001600160a01b0390931683526020830191909152016101f4565b610224610ab8565b610278610afc565b6065546001600160a01b031661023a565b610278610358366004611f7a565b610b15565b6101e7610c56565b610210610373366004611e2d565b610c65565b60cb5461023a906001600160a01b031681565b610210610399366004611e2d565b610ce0565b610224610cee565b6102786103b4366004611e9a565b610dd8565b610278610ef1565b6102246103cf366004611ff0565b610f82565b610278610fad565b6102786103ea366004611eb3565b611022565b61022460cc5481565b610278611101565b61027861040e366004611eb3565b611237565b60606036805461042290612029565b80601f016020809104026020016040519081016040528092919081815260200182805461044e90612029565b801561049b5780601f106104705761010080835404028352916020019161049b565b820191906000526020600020905b81548152906001019060200180831161047e57829003601f168201915b5050505050905090565b6000336104b38185856112ad565b5060019392505050565b60cb5460408051631f1fcd5160e01b815290516000926001600160a01b031691631f1fcd519160048083019260209291908290030181865afa158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b9190612064565b905090565b60003361053e8582856113d1565b610549858585611445565b506001949350505050565b600061055f60355490565b82610568610cee565b6105729190612097565b61057c91906120b6565b905061058833836115f0565b60006105926104bd565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc91906120d8565b90508181101561070e57600061061282846120f1565b60cb54604051632e1a7d4d60e01b8152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561065957600080fd5b505af115801561066d573d6000803e3d6000fd5b50505050600061067b6104bd565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e591906120d8565b905060006106f384836120f1565b90508281101561070a576107078185612108565b94505b5050505b61072b338361071b6104bd565b6001600160a01b03169190611724565b505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b0316631f1fcd516040518163ffffffff1660e01b8152600401602060405180830381865afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa9190612064565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190612120565b91505090565b6000336104b38185856108278383610f82565b6108319190612108565b6112ad565b60006108406104bd565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610886573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b91906120d8565b6108b2611787565b806001600160a01b031663fbfa77cf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190612064565b6001600160a01b0316306001600160a01b0316146109835760405162461bcd60e51b815260206004820152602160248201527f50726f706f73616c206e6f742076616c696420666f722074686973205661756c6044820152601d60fa1b60648201526084015b60405180910390fd5b806001600160a01b0316631f1fcd516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190612064565b6001600160a01b03166109f66104bd565b6001600160a01b031614610a3d5760405162461bcd60e51b815260206004820152600e60248201526d111a5999995c995b9d081dd85b9d60921b604482015260640161097a565b6040805180820182526001600160a01b03831680825242602092830181905260c980546001600160a01b0319168317905560ca5591519182527f1aae2ec5647db56da2d513de40528ba3565c6057525637050660c4323bbac7df910160405180910390a150565b610aac611787565b610ab660006117e1565b565b6000610ac360355490565b15610aef57603554610ad3610cee565b610ae590670de0b6b3a7640000612097565b61052b91906120b6565b50670de0b6b3a764000090565b33600090815260336020526040902054610ab690610554565b600054610100900460ff1615808015610b355750600054600160ff909116105b80610b4f5750303b158015610b4f575060005460ff166001145b610bb25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161097a565b6000805460ff191660011790558015610bd5576000805461ff0019166101001790555b610bdf8383611833565b610be7611864565b610bef611893565b60cb80546001600160a01b0319166001600160a01b0386161790558015610c50576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60606037805461042290612029565b60003381610c738286610f82565b905083811015610cd35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161097a565b61054982868684036112ad565b6000336104b3818585611445565b60cb546040805163722713f760e01b815290516000926001600160a01b03169163722713f79160048083019260209291908290030181865afa158015610d38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5c91906120d8565b610d646104bd565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610daa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dce91906120d8565b61052b9190612108565b610de06118c2565b60cb60009054906101000a90046001600160a01b03166001600160a01b031663573fef0a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e3057600080fd5b505af1158015610e44573d6000803e3d6000fd5b505050506000610e52610cee565b9050610e73333084610e626104bd565b6001600160a01b031692919061191c565b6000610e7d610cee565b9050610e87610ef1565b6000610e91610cee565b9050610e9d83826120f1565b93506000610eaa60355490565b610eb5575083610ed6565b83610ebf60355490565b610ec99087612097565b610ed391906120b6565b90505b610ee03382611954565b50505050610eee6001609755565b50565b6000610efb610836565b60cb54909150610f17906001600160a01b03168261071b6104bd565b60cb60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f6757600080fd5b505af1158015610f7b573d6000803e3d6000fd5b5050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610ab6610fb86104bd565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610ffe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b491906120d8565b61102a611787565b6110326104bd565b6001600160a01b0316816001600160a01b0316141561107c5760405162461bcd60e51b815260206004820152600660248201526510ba37b5b2b760d11b604482015260640161097a565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156110c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e791906120d8565b90506110fd6001600160a01b0383163383611724565b5050565b611109611787565b60c9546001600160a01b03166111595760405162461bcd60e51b81526020600482015260156024820152745468657265206973206e6f2063616e64696461746560581b604482015260640161097a565b60c9546040516001600160a01b0390911681527f7f37d440e85aba7fbf641c4bda5ca4ef669a80bffaacde2aa8d9feb1b048c82c9060200160405180910390a160cb60009054906101000a90046001600160a01b03166001600160a01b031663fb6177876040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156111e957600080fd5b505af11580156111fd573d6000803e3d6000fd5b505060c9805460cb80546001600160a01b03199081166001600160a01b03841617909155169055505064012a05f20060ca55610ab6610ef1565b61123f611787565b6001600160a01b0381166112a45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161097a565b610eee816117e1565b6001600160a01b03831661130f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161097a565b6001600160a01b0382166113705760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161097a565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006113dd8484610f82565b90506000198114610c5057818110156114385760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161097a565b610c5084848484036112ad565b6001600160a01b0383166114a95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161097a565b6001600160a01b03821661150b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161097a565b6001600160a01b038316600090815260336020526040902054818110156115835760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161097a565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115e39086815260200190565b60405180910390a3610c50565b6001600160a01b0382166116505760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161097a565b6001600160a01b038216600090815260336020526040902054818110156116c45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161097a565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261072b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a1c565b6065546001600160a01b03163314610ab65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161097a565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661185a5760405162461bcd60e51b815260040161097a90612143565b6110fd8282611aee565b600054610100900460ff1661188b5760405162461bcd60e51b815260040161097a90612143565b610ab6611b3c565b600054610100900460ff166118ba5760405162461bcd60e51b815260040161097a90612143565b610ab6611b6c565b600260975414156119155760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161097a565b6002609755565b6040516001600160a01b0380851660248301528316604482015260648101829052610c509085906323b872dd60e01b90608401611750565b6001600160a01b0382166119aa5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161097a565b80603560008282546119bc9190612108565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001609755565b6000611a71826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b939092919063ffffffff16565b80519091501561072b5780806020019051810190611a8f919061218e565b61072b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161097a565b600054610100900460ff16611b155760405162461bcd60e51b815260040161097a90612143565b8151611b28906036906020850190611d20565b50805161072b906037906020840190611d20565b600054610100900460ff16611b635760405162461bcd60e51b815260040161097a90612143565b610ab6336117e1565b600054610100900460ff16611a155760405162461bcd60e51b815260040161097a90612143565b6060611ba28484600085611baa565b949350505050565b606082471015611c0b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161097a565b600080866001600160a01b03168587604051611c2791906121b0565b60006040518083038185875af1925050503d8060008114611c64576040519150601f19603f3d011682016040523d82523d6000602084013e611c69565b606091505b5091509150611c7a87838387611c85565b979650505050505050565b60608315611cf1578251611cea576001600160a01b0385163b611cea5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161097a565b5081611ba2565b611ba28383815115611d065781518083602001fd5b8060405162461bcd60e51b815260040161097a9190611de5565b828054611d2c90612029565b90600052602060002090601f016020900481019282611d4e5760008555611d94565b82601f10611d6757805160ff1916838001178555611d94565b82800160010185558215611d94579182015b82811115611d94578251825591602001919060010190611d79565b50611da0929150611da4565b5090565b5b80821115611da05760008155600101611da5565b60005b83811015611dd4578181015183820152602001611dbc565b83811115610c505750506000910152565b6020815260008251806020840152611e04816040850160208701611db9565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610eee57600080fd5b60008060408385031215611e4057600080fd5b8235611e4b81611e18565b946020939093013593505050565b600080600060608486031215611e6e57600080fd5b8335611e7981611e18565b92506020840135611e8981611e18565b929592945050506040919091013590565b600060208284031215611eac57600080fd5b5035919050565b600060208284031215611ec557600080fd5b8135611ed081611e18565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611efe57600080fd5b813567ffffffffffffffff80821115611f1957611f19611ed7565b604051601f8301601f19908116603f01168101908282118183101715611f4157611f41611ed7565b81604052838152866020858801011115611f5a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611f8f57600080fd5b8335611f9a81611e18565b9250602084013567ffffffffffffffff80821115611fb757600080fd5b611fc387838801611eed565b93506040860135915080821115611fd957600080fd5b50611fe686828701611eed565b9150509250925092565b6000806040838503121561200357600080fd5b823561200e81611e18565b9150602083013561201e81611e18565b809150509250929050565b600181811c9082168061203d57607f821691505b6020821081141561205e57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561207657600080fd5b8151611ed081611e18565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156120b1576120b1612081565b500290565b6000826120d357634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156120ea57600080fd5b5051919050565b60008282101561210357612103612081565b500390565b6000821982111561211b5761211b612081565b500190565b60006020828403121561213257600080fd5b815160ff81168114611ed057600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156121a057600080fd5b81518015158114611ed057600080fd5b600082516121c2818460208701611db9565b919091019291505056fea26469706673582212201eed636bcf87ff7b2d97433cd6caca799c7204985d77b8d7278950e47eda585964736f6c634300080c0033";

type BeefyVaultV7ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BeefyVaultV7ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BeefyVaultV7__factory extends ContractFactory {
  constructor(...args: BeefyVaultV7ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BeefyVaultV7> {
    return super.deploy(overrides || {}) as Promise<BeefyVaultV7>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BeefyVaultV7 {
    return super.attach(address) as BeefyVaultV7;
  }
  override connect(signer: Signer): BeefyVaultV7__factory {
    return super.connect(signer) as BeefyVaultV7__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeefyVaultV7Interface {
    return new utils.Interface(_abi) as BeefyVaultV7Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeefyVaultV7 {
    return new Contract(address, _abi, signerOrProvider) as BeefyVaultV7;
  }
}
