/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BeefyVaultV7,
  BeefyVaultV7Interface,
} from "../../../contracts/vaults/BeefyVaultV7";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "NewStratCandidate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "UpgradeStrat",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvalDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "available",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "earn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPricePerFullShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "inCaseTokensGetStuck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IStrategyV7",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "proposeStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stratCandidate",
    outputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposedTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategy",
    outputs: [
      {
        internalType: "contract IStrategyV7",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upgradeStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612308806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638da5cb5b11610104578063b6b55f25116100a2578063def68a9c11610071578063def68a9c146103dc578063e2d1e75c146103ef578063e6685244146103f8578063f2fde38b1461040057600080fd5b8063b6b55f25146103a6578063d389800f146103b9578063dd62ed3e146103c1578063de5f6268146103d457600080fd5b8063a457c2d7116100de578063a457c2d714610365578063a8c62e7614610378578063a9059cbb1461038b578063b69ef8a81461039e57600080fd5b80638da5cb5b14610339578063906571471461034a57806395d89b411461035d57600080fd5b8063395093511161017c578063715018a61161014b578063715018a6146102eb57806376dfabb8146102f357806377c7b8fc14610329578063853828b61461033157600080fd5b8063395093511461029457806348a0d754146102a75780635b12ff9b146102af57806370a08231146102c257600080fd5b80631f1fcd51116101b85780631f1fcd511461023257806323b872dd146102525780632e1a7d4d14610265578063313ce5671461027a57600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e7610413565b6040516101f49190611df8565b60405180910390f35b61021061020b366004611e40565b6104a5565b60405190151581526020016101f4565b6035545b6040519081526020016101f4565b61023a6104bf565b6040516001600160a01b0390911681526020016101f4565b610210610260366004611e6c565b610532565b610278610273366004611ead565b610556565b005b610282610732565b60405160ff90911681526020016101f4565b6102106102a2366004611e40565b610816565b610224610838565b6102786102bd366004611ec6565b6108ac565b6102246102d0366004611ec6565b6001600160a01b031660009081526033602052604090205490565b610278610aa6565b60c95460ca5461030a916001600160a01b03169082565b604080516001600160a01b0390931683526020830191909152016101f4565b610224610aba565b610278610b0f565b6065546001600160a01b031661023a565b610278610358366004611f8d565b610b28565b6101e7610c69565b610210610373366004611e40565b610c78565b60cb5461023a906001600160a01b031681565b610210610399366004611e40565b610cf3565b610224610d01565b6102786103b4366004611ead565b610deb565b610278610f04565b6102246103cf366004612003565b610f95565b610278610fc0565b6102786103ea366004611ec6565b611035565b61022460cc5481565b610278611114565b61027861040e366004611ec6565b61124a565b6060603680546104229061203c565b80601f016020809104026020016040519081016040528092919081815260200182805461044e9061203c565b801561049b5780601f106104705761010080835404028352916020019161049b565b820191906000526020600020905b81548152906001019060200180831161047e57829003601f168201915b5050505050905090565b6000336104b38185856112c0565b60019150505b92915050565b60cb5460408051631f1fcd5160e01b815290516000926001600160a01b031691631f1fcd519160048083019260209291908290030181865afa158015610509573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d9190612077565b905090565b6000336105408582856113e4565b61054b858585611458565b506001949350505050565b600061056160355490565b8261056a610d01565b61057491906120aa565b61057e91906120c9565b905061058a3383611603565b60006105946104bf565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe91906120eb565b9050818110156107105760006106148284612104565b60cb54604051632e1a7d4d60e01b8152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b50505050600061067d6104bf565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156106c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e791906120eb565b905060006106f58483612104565b90508281101561070c57610709818561211b565b94505b5050505b61072d338361071d6104bf565b6001600160a01b03169190611737565b505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b0316631f1fcd516040518163ffffffff1660e01b8152600401602060405180830381865afa158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac9190612077565b9050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190612133565b91505090565b6000336104b38185856108298383610f95565b610833919061211b565b6112c0565b60006108426104bf565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052d91906120eb565b6108b461179a565b806001600160a01b031663fbfa77cf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190612077565b6001600160a01b0316306001600160a01b0316146109855760405162461bcd60e51b815260206004820152602160248201527f50726f706f73616c206e6f742076616c696420666f722074686973205661756c6044820152601d60fa1b60648201526084015b60405180910390fd5b806001600160a01b0316631f1fcd516040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e79190612077565b6001600160a01b03166109f86104bf565b6001600160a01b031614610a3f5760405162461bcd60e51b815260206004820152600e60248201526d111a5999995c995b9d081dd85b9d60921b604482015260640161097c565b6040805180820182526001600160a01b03831680825242602092830181905260c980546001600160a01b0319168317905560ca5591519182527f1aae2ec5647db56da2d513de40528ba3565c6057525637050660c4323bbac7df910160405180910390a150565b610aae61179a565b610ab860006117f4565b565b6000610ac560355490565b15610afc57603554610ad5610732565b610ae090600a61223a565b610ae8610d01565b610af291906120aa565b61052d91906120c9565b610b04610732565b61052d90600a61223a565b33600090815260336020526040902054610ab890610556565b600054610100900460ff1615808015610b485750600054600160ff909116105b80610b625750303b158015610b62575060005460ff166001145b610bc55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161097c565b6000805460ff191660011790558015610be8576000805461ff0019166101001790555b610bf28383611846565b610bfa611877565b610c026118a6565b60cb80546001600160a01b0319166001600160a01b0386161790558015610c63576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6060603780546104229061203c565b60003381610c868286610f95565b905083811015610ce65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161097c565b61054b82868684036112c0565b6000336104b3818585611458565b60cb546040805163722713f760e01b815290516000926001600160a01b03169163722713f79160048083019260209291908290030181865afa158015610d4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6f91906120eb565b610d776104bf565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610dbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de191906120eb565b61052d919061211b565b610df36118d5565b60cb60009054906101000a90046001600160a01b03166001600160a01b031663573fef0a6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e4357600080fd5b505af1158015610e57573d6000803e3d6000fd5b505050506000610e65610d01565b9050610e86333084610e756104bf565b6001600160a01b031692919061192f565b6000610e90610d01565b9050610e9a610f04565b6000610ea4610d01565b9050610eb08382612104565b93506000610ebd60355490565b610ec8575083610ee9565b83610ed260355490565b610edc90876120aa565b610ee691906120c9565b90505b610ef33382611967565b50505050610f016001609755565b50565b6000610f0e610838565b60cb54909150610f2a906001600160a01b03168261071d6104bf565b60cb60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db06040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f7a57600080fd5b505af1158015610f8e573d6000803e3d6000fd5b5050505050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610ab8610fcb6104bf565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b491906120eb565b61103d61179a565b6110456104bf565b6001600160a01b0316816001600160a01b0316141561108f5760405162461bcd60e51b815260206004820152600660248201526510ba37b5b2b760d11b604482015260640161097c565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156110d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fa91906120eb565b90506111106001600160a01b0383163383611737565b5050565b61111c61179a565b60c9546001600160a01b031661116c5760405162461bcd60e51b81526020600482015260156024820152745468657265206973206e6f2063616e64696461746560581b604482015260640161097c565b60c9546040516001600160a01b0390911681527f7f37d440e85aba7fbf641c4bda5ca4ef669a80bffaacde2aa8d9feb1b048c82c9060200160405180910390a160cb60009054906101000a90046001600160a01b03166001600160a01b031663fb6177876040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156111fc57600080fd5b505af1158015611210573d6000803e3d6000fd5b505060c9805460cb80546001600160a01b03199081166001600160a01b03841617909155169055505064012a05f20060ca55610ab8610f04565b61125261179a565b6001600160a01b0381166112b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161097c565b610f01816117f4565b6001600160a01b0383166113225760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161097c565b6001600160a01b0382166113835760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161097c565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006113f08484610f95565b90506000198114610c63578181101561144b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161097c565b610c6384848484036112c0565b6001600160a01b0383166114bc5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161097c565b6001600160a01b03821661151e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161097c565b6001600160a01b038316600090815260336020526040902054818110156115965760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161097c565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906115f69086815260200190565b60405180910390a3610c63565b6001600160a01b0382166116635760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161097c565b6001600160a01b038216600090815260336020526040902054818110156116d75760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161097c565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261072d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611a2f565b6065546001600160a01b03163314610ab85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161097c565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661186d5760405162461bcd60e51b815260040161097c90612249565b6111108282611b01565b600054610100900460ff1661189e5760405162461bcd60e51b815260040161097c90612249565b610ab8611b4f565b600054610100900460ff166118cd5760405162461bcd60e51b815260040161097c90612249565b610ab8611b7f565b600260975414156119285760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161097c565b6002609755565b6040516001600160a01b0380851660248301528316604482015260648101829052610c639085906323b872dd60e01b90608401611763565b6001600160a01b0382166119bd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161097c565b80603560008282546119cf919061211b565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001609755565b6000611a84826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ba69092919063ffffffff16565b80519091501561072d5780806020019051810190611aa29190612294565b61072d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161097c565b600054610100900460ff16611b285760405162461bcd60e51b815260040161097c90612249565b8151611b3b906036906020850190611d33565b50805161072d906037906020840190611d33565b600054610100900460ff16611b765760405162461bcd60e51b815260040161097c90612249565b610ab8336117f4565b600054610100900460ff16611a285760405162461bcd60e51b815260040161097c90612249565b6060611bb58484600085611bbd565b949350505050565b606082471015611c1e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161097c565b600080866001600160a01b03168587604051611c3a91906122b6565b60006040518083038185875af1925050503d8060008114611c77576040519150601f19603f3d011682016040523d82523d6000602084013e611c7c565b606091505b5091509150611c8d87838387611c98565b979650505050505050565b60608315611d04578251611cfd576001600160a01b0385163b611cfd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161097c565b5081611bb5565b611bb58383815115611d195781518083602001fd5b8060405162461bcd60e51b815260040161097c9190611df8565b828054611d3f9061203c565b90600052602060002090601f016020900481019282611d615760008555611da7565b82601f10611d7a57805160ff1916838001178555611da7565b82800160010185558215611da7579182015b82811115611da7578251825591602001919060010190611d8c565b50611db3929150611db7565b5090565b5b80821115611db35760008155600101611db8565b60005b83811015611de7578181015183820152602001611dcf565b83811115610c635750506000910152565b6020815260008251806020840152611e17816040850160208701611dcc565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610f0157600080fd5b60008060408385031215611e5357600080fd5b8235611e5e81611e2b565b946020939093013593505050565b600080600060608486031215611e8157600080fd5b8335611e8c81611e2b565b92506020840135611e9c81611e2b565b929592945050506040919091013590565b600060208284031215611ebf57600080fd5b5035919050565b600060208284031215611ed857600080fd5b8135611ee381611e2b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611f1157600080fd5b813567ffffffffffffffff80821115611f2c57611f2c611eea565b604051601f8301601f19908116603f01168101908282118183101715611f5457611f54611eea565b81604052838152866020858801011115611f6d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611fa257600080fd5b8335611fad81611e2b565b9250602084013567ffffffffffffffff80821115611fca57600080fd5b611fd687838801611f00565b93506040860135915080821115611fec57600080fd5b50611ff986828701611f00565b9150509250925092565b6000806040838503121561201657600080fd5b823561202181611e2b565b9150602083013561203181611e2b565b809150509250929050565b600181811c9082168061205057607f821691505b6020821081141561207157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561208957600080fd5b8151611ee381611e2b565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156120c4576120c4612094565b500290565b6000826120e657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156120fd57600080fd5b5051919050565b60008282101561211657612116612094565b500390565b6000821982111561212e5761212e612094565b500190565b60006020828403121561214557600080fd5b815160ff81168114611ee357600080fd5b600181815b8085111561219157816000190482111561217757612177612094565b8085161561218457918102915b93841c939080029061215b565b509250929050565b6000826121a8575060016104b9565b816121b5575060006104b9565b81600181146121cb57600281146121d5576121f1565b60019150506104b9565b60ff8411156121e6576121e6612094565b50506001821b6104b9565b5060208310610133831016604e8410600b8410161715612214575081810a6104b9565b61221e8383612156565b806000190482111561223257612232612094565b029392505050565b6000611ee360ff841683612199565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602082840312156122a657600080fd5b81518015158114611ee357600080fd5b600082516122c8818460208701611dcc565b919091019291505056fea2646970667358221220596beb650bc4c9e59980a41788ae58298bad0fdc49068331f11d6b688eecb97164736f6c634300080c0033";

type BeefyVaultV7ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BeefyVaultV7ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BeefyVaultV7__factory extends ContractFactory {
  constructor(...args: BeefyVaultV7ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BeefyVaultV7> {
    return super.deploy(overrides || {}) as Promise<BeefyVaultV7>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BeefyVaultV7 {
    return super.attach(address) as BeefyVaultV7;
  }
  override connect(signer: Signer): BeefyVaultV7__factory {
    return super.connect(signer) as BeefyVaultV7__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeefyVaultV7Interface {
    return new utils.Interface(_abi) as BeefyVaultV7Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeefyVaultV7 {
    return new Contract(address, _abi, signerOrProvider) as BeefyVaultV7;
  }
}
